--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 1392, Column: 0 }
Function:        _vsnprintf_l
Args:
  - Callee:          __stdio_common_vsprintf
  - String:          ' will not be inlined into '
  - Caller:          _vsnprintf_l
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1391, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 1392, Column: 0 }
Function:        _vsnprintf_l
Args:
  - Callee:          __stdio_common_vsprintf
  - String:          ' will not be inlined into '
  - Caller:          _vsnprintf_l
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1391, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 1392, Column: 0 }
Function:        _vsnprintf_l
Args:
  - String:          ''''
  - Callee:          __local_stdio_printf_options
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h', 
                       Line: 90, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          _vsnprintf_l
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1391, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          noinline function attribute
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 1459, Column: 0 }
Function:        _vsprintf_l
Args:
  - String:          ''''
  - Callee:          _vsnprintf_l
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1391, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          _vsprintf_l
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1458, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-14945'
  - String:          ', threshold='
  - Threshold:       '487'
  - String:          ')'
  - String:          ' at callsite '
  - String:          _vsprintf_l
  - String:          ':'
  - Line:            '10'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 1392, Column: 0 }
Function:        _vsprintf_l
Args:
  - String:          ''''
  - Callee:          __local_stdio_printf_options
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h', 
                       Line: 90, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          _vsprintf_l
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1458, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          noinline function attribute
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 1776, Column: 0 }
Function:        sprintf
Args:
  - String:          ''''
  - Callee:          _vsprintf_l
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1458, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          sprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1771, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-14940'
  - String:          ', threshold='
  - Threshold:       '487'
  - String:          ')'
  - String:          ' at callsite '
  - String:          sprintf
  - String:          ':'
  - Line:            '12'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 1392, Column: 0 }
Function:        sprintf
Args:
  - String:          ''''
  - Callee:          __local_stdio_printf_options
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h', 
                       Line: 90, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          sprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1771, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          noinline function attribute
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 645, Column: 0 }
Function:        _vfprintf_l
Args:
  - Callee:          __stdio_common_vfprintf
  - String:          ' will not be inlined into '
  - Caller:          _vfprintf_l
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 644, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 645, Column: 0 }
Function:        _vfprintf_l
Args:
  - Callee:          __stdio_common_vfprintf
  - String:          ' will not be inlined into '
  - Caller:          _vfprintf_l
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 644, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 645, Column: 0 }
Function:        _vfprintf_l
Args:
  - String:          ''''
  - Callee:          __local_stdio_printf_options
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h', 
                       Line: 90, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          _vfprintf_l
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 644, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          noinline function attribute
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 841, Column: 0 }
Function:        fprintf
Args:
  - String:          ''''
  - Callee:          _vfprintf_l
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 644, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          fprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 837, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '40'
  - String:          ', threshold='
  - Threshold:       '487'
  - String:          ')'
  - String:          ' at callsite '
  - String:          fprintf
  - String:          ':'
  - Line:            '11'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 645, Column: 0 }
Function:        fprintf
Args:
  - String:          ''''
  - Callee:          __local_stdio_printf_options
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h', 
                       Line: 90, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          fprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 837, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          noinline function attribute
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 960, Column: 0 }
Function:        printf
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 960, Column: 0 }
Function:        printf
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 960, Column: 0 }
Function:        printf
Args:
  - String:          ''''
  - Callee:          _vfprintf_l
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 644, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-14960'
  - String:          ', threshold='
  - Threshold:       '487'
  - String:          ')'
  - String:          ' at callsite '
  - String:          printf
  - String:          ':'
  - Line:            '10'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 645, Column: 0 }
Function:        printf
Args:
  - String:          ''''
  - Callee:          __local_stdio_printf_options
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h', 
                       Line: 90, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          noinline function attribute
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 1065, Column: 0 }
Function:        _vfscanf_l
Args:
  - Callee:          __stdio_common_vfscanf
  - String:          ' will not be inlined into '
  - Caller:          _vfscanf_l
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1064, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 1065, Column: 0 }
Function:        _vfscanf_l
Args:
  - Callee:          __stdio_common_vfscanf
  - String:          ' will not be inlined into '
  - Caller:          _vfscanf_l
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1064, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 1065, Column: 0 }
Function:        _vfscanf_l
Args:
  - String:          ''''
  - Callee:          __local_stdio_scanf_options
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h', 
                       Line: 100, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          _vfscanf_l
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1064, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          noinline function attribute
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 1210, Column: 0 }
Function:        fscanf
Args:
  - String:          ''''
  - Callee:          _vfscanf_l
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1064, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          fscanf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1206, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-14960'
  - String:          ', threshold='
  - Threshold:       '487'
  - String:          ')'
  - String:          ' at callsite '
  - String:          fscanf
  - String:          ':'
  - Line:            '11'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 1065, Column: 0 }
Function:        fscanf
Args:
  - String:          ''''
  - Callee:          __local_stdio_scanf_options
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h', 
                       Line: 100, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          fscanf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1206, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          noinline function attribute
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 201, Column: 0 }
Function:        establish_pairs
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 206, Column: 0 }
Function:        establish_pairs
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 206, Column: 0 }
Function:        establish_pairs
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 207, Column: 0 }
Function:        establish_pairs
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 233, Column: 0 }
Function:        establish_pairs
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 241, Column: 0 }
Function:        establish_pairs
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 201, Column: 0 }
Function:        establish_pairs
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 206, Column: 0 }
Function:        establish_pairs
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 206, Column: 0 }
Function:        establish_pairs
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 207, Column: 0 }
Function:        establish_pairs
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 233, Column: 0 }
Function:        establish_pairs
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 241, Column: 0 }
Function:        establish_pairs
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 211, Column: 0 }
Function:        establish_pairs
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 221, Column: 0 }
Function:        establish_pairs
Args:
  - String:          ''''
  - Callee:          pow2
    DebugLoc:        { File: symmetry.c, Line: 193, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-30'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          establish_pairs
  - String:          ':'
  - Line:            '23'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
Function:        establish_pairs
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 232, Column: 0 }
Function:        establish_pairs
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 238, Column: 0 }
Function:        establish_pairs
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 261, Column: 0 }
Function:        check_transform_order
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          check_transform_order
    DebugLoc:        { File: symmetry.c, Line: 247, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 269, Column: 0 }
Function:        check_transform_order
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          check_transform_order
    DebugLoc:        { File: symmetry.c, Line: 247, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 275, Column: 0 }
Function:        check_transform_order
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          check_transform_order
    DebugLoc:        { File: symmetry.c, Line: 247, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 310, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 314, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 314, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 315, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 317, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 319, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 319, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 320, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 310, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 314, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 314, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 315, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 317, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 319, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 319, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 320, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 333, Column: 0 }
Function:        destroy_symmetry_element
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          destroy_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 330, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 334, Column: 0 }
Function:        destroy_symmetry_element
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          destroy_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 330, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 333, Column: 0 }
Function:        destroy_symmetry_element
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          destroy_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 330, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 334, Column: 0 }
Function:        destroy_symmetry_element
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          destroy_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 330, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 349, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          ''''
  - Callee:          pow2
    DebugLoc:        { File: symmetry.c, Line: 193, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          check_transform_quality
    DebugLoc:        { File: symmetry.c, Line: 340, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-30'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          check_transform_quality
  - String:          ':'
  - Line:            '10'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 353, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          check_transform_quality
    DebugLoc:        { File: symmetry.c, Line: 340, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 375, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 375, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 376, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 394, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 394, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 395, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 375, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 375, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 376, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 394, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 394, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 395, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 405, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          ''''
  - Callee:          pow2
    DebugLoc:        { File: symmetry.c, Line: 193, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-30'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          eval_optimization_target_function
  - String:          ':'
  - Line:            '42'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 445, Column: 0 }
Function:        optimize_transformation_params
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 445, Column: 0 }
Function:        optimize_transformation_params
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 446, Column: 0 }
Function:        optimize_transformation_params
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 455, Column: 0 }
Function:        optimize_transformation_params
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 463, Column: 0 }
Function:        optimize_transformation_params
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 546, Column: 0 }
Function:        optimize_transformation_params
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 445, Column: 0 }
Function:        optimize_transformation_params
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 445, Column: 0 }
Function:        optimize_transformation_params
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 446, Column: 0 }
Function:        optimize_transformation_params
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 455, Column: 0 }
Function:        optimize_transformation_params
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 463, Column: 0 }
Function:        optimize_transformation_params
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 546, Column: 0 }
Function:        optimize_transformation_params
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 451, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '600'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 467, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          get_params
    DebugLoc:        { File: symmetry.c, Line: 420, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-25'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          optimize_transformation_params
  - String:          ':'
  - Line:            '36'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 470, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          set_params
    DebugLoc:        { File: symmetry.c, Line: 426, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-25'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          optimize_transformation_params
  - String:          ':'
  - Line:            '39'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 471, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '580'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 473, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          set_params
    DebugLoc:        { File: symmetry.c, Line: 426, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-25'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          optimize_transformation_params
  - String:          ':'
  - Line:            '42'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 474, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '580'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 478, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 498, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          set_params
    DebugLoc:        { File: symmetry.c, Line: 426, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-25'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          optimize_transformation_params
  - String:          ':'
  - Line:            '67'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 499, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '580'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 506, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          set_params
    DebugLoc:        { File: symmetry.c, Line: 426, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-25'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          optimize_transformation_params
  - String:          ':'
  - Line:            '75'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 512, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          set_params
    DebugLoc:        { File: symmetry.c, Line: 426, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-25'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          optimize_transformation_params
  - String:          ':'
  - Line:            '81'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 513, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '580'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 514, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 519, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 523, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 539, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          set_params
    DebugLoc:        { File: symmetry.c, Line: 426, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-25'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          optimize_transformation_params
  - String:          ':'
  - Line:            '108'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 542, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '580'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 547, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 559, Column: 0 }
Function:        refine_symmetry_element
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 592, Column: 0 }
Function:        refine_symmetry_element
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 598, Column: 0 }
Function:        refine_symmetry_element
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 559, Column: 0 }
Function:        refine_symmetry_element
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 592, Column: 0 }
Function:        refine_symmetry_element
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 598, Column: 0 }
Function:        refine_symmetry_element
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          ''''
  - Callee:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '795'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 563, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          ''''
  - Callee:          same_transform
    DebugLoc:        { File: symmetry.c, Line: 284, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '125'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          refine_symmetry_element
  - String:          ':'
  - Line:            '11'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 565, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 570, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          ''''
  - Callee:          same_transform
    DebugLoc:        { File: symmetry.c, Line: 284, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '125'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          refine_symmetry_element
  - String:          ':'
  - Line:            '18'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 572, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 577, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          ''''
  - Callee:          same_transform
    DebugLoc:        { File: symmetry.c, Line: 284, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '125'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          refine_symmetry_element
  - String:          ':'
  - Line:            '25'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 579, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 584, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          ''''
  - Callee:          same_transform
    DebugLoc:        { File: symmetry.c, Line: 284, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '125'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          refine_symmetry_element
  - String:          ':'
  - Line:            '32'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 586, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 590, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          ''''
  - Callee:          check_transform_order
    DebugLoc:        { File: symmetry.c, Line: 247, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '345'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 595, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          ''''
  - Callee:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1860'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 596, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          ''''
  - Callee:          check_transform_quality
    DebugLoc:        { File: symmetry.c, Line: 340, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '180'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          refine_symmetry_element
  - String:          ':'
  - Line:            '44'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 353, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 643, Column: 0 }
Function:        init_mirror_plane
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 644, Column: 0 }
Function:        init_mirror_plane
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 659, Column: 0 }
Function:        init_mirror_plane
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 643, Column: 0 }
Function:        init_mirror_plane
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 644, Column: 0 }
Function:        init_mirror_plane
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 659, Column: 0 }
Function:        init_mirror_plane
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 627, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          ''''
  - Callee:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '355'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 631, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 643, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          ''''
  - Callee:          fprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 837, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 657, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 658, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          ''''
  - Callee:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1660'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 660, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          ''''
  - Callee:          destroy_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 330, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '60'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          init_mirror_plane
  - String:          ':'
  - Line:            '35'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 676, Column: 0 }
Function:        init_ultimate_plane
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 714, Column: 0 }
Function:        init_ultimate_plane
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 715, Column: 0 }
Function:        init_ultimate_plane
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 735, Column: 0 }
Function:        init_ultimate_plane
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 676, Column: 0 }
Function:        init_ultimate_plane
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 714, Column: 0 }
Function:        init_ultimate_plane
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 715, Column: 0 }
Function:        init_ultimate_plane
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 735, Column: 0 }
Function:        init_ultimate_plane
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 669, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          ''''
  - Callee:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '355'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 714, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          ''''
  - Callee:          fprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 837, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 734, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          ''''
  - Callee:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1550'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 736, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          ''''
  - Callee:          destroy_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 330, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '60'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          init_ultimate_plane
  - String:          ':'
  - Line:            '69'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 762, Column: 0 }
Function:        init_inversion_center
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_inversion_center
    DebugLoc:        { File: symmetry.c, Line: 757, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 782, Column: 0 }
Function:        init_inversion_center
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_inversion_center
    DebugLoc:        { File: symmetry.c, Line: 757, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 762, Column: 0 }
Function:        init_inversion_center
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_inversion_center
    DebugLoc:        { File: symmetry.c, Line: 757, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 782, Column: 0 }
Function:        init_inversion_center
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_inversion_center
    DebugLoc:        { File: symmetry.c, Line: 757, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 758, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          ''''
  - Callee:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_inversion_center
    DebugLoc:        { File: symmetry.c, Line: 757, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '355'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 780, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_inversion_center
    DebugLoc:        { File: symmetry.c, Line: 757, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 781, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          ''''
  - Callee:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_inversion_center
    DebugLoc:        { File: symmetry.c, Line: 757, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1660'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 783, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          ''''
  - Callee:          destroy_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 330, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          init_inversion_center
    DebugLoc:        { File: symmetry.c, Line: 757, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '60'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          init_inversion_center
  - String:          ':'
  - Line:            '27'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 832, Column: 0 }
Function:        init_ultimate_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_axis
    DebugLoc:        { File: symmetry.c, Line: 826, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 874, Column: 0 }
Function:        init_ultimate_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_axis
    DebugLoc:        { File: symmetry.c, Line: 826, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 832, Column: 0 }
Function:        init_ultimate_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_axis
    DebugLoc:        { File: symmetry.c, Line: 826, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 874, Column: 0 }
Function:        init_ultimate_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_axis
    DebugLoc:        { File: symmetry.c, Line: 826, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 827, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          ''''
  - Callee:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_ultimate_axis
    DebugLoc:        { File: symmetry.c, Line: 826, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '355'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 851, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          ''''
  - Callee:          pow2
    DebugLoc:        { File: symmetry.c, Line: 193, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          init_ultimate_axis
    DebugLoc:        { File: symmetry.c, Line: 826, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-30'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          init_ultimate_axis
  - String:          ':'
  - Line:            '26'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 860, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          ''''
  - Callee:          pow2
    DebugLoc:        { File: symmetry.c, Line: 193, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          init_ultimate_axis
    DebugLoc:        { File: symmetry.c, Line: 826, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-30'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          init_ultimate_axis
  - String:          ':'
  - Line:            '35'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 873, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          ''''
  - Callee:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_ultimate_axis
    DebugLoc:        { File: symmetry.c, Line: 826, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1550'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 875, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          ''''
  - Callee:          destroy_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 330, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          init_ultimate_axis
    DebugLoc:        { File: symmetry.c, Line: 826, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '60'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          init_ultimate_axis
  - String:          ':'
  - Line:            '50'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 903, Column: 0 }
Function:        init_c2_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 930, Column: 0 }
Function:        init_c2_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 935, Column: 0 }
Function:        init_c2_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 960, Column: 0 }
Function:        init_c2_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 903, Column: 0 }
Function:        init_c2_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 930, Column: 0 }
Function:        init_c2_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 935, Column: 0 }
Function:        init_c2_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 960, Column: 0 }
Function:        init_c2_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 891, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 896, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          ''''
  - Callee:          pow2
    DebugLoc:        { File: symmetry.c, Line: 193, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-30'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          init_c2_axis
  - String:          ':'
  - Line:            '13'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 897, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          ''''
  - Callee:          pow2
    DebugLoc:        { File: symmetry.c, Line: 193, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-30'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          init_c2_axis
  - String:          ':'
  - Line:            '14'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 906, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          ''''
  - Callee:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '355'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 959, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          ''''
  - Callee:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1660'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 961, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          ''''
  - Callee:          destroy_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 330, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '60'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          init_c2_axis
  - String:          ':'
  - Line:            '78'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 984, Column: 0 }
Function:        init_axis_parameters
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 997, Column: 0 }
Function:        init_axis_parameters
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1002, Column: 0 }
Function:        init_axis_parameters
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1006, Column: 0 }
Function:        init_axis_parameters
Args:
  - Callee:          asin
  - String:          ' will not be inlined into '
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1010, Column: 0 }
Function:        init_axis_parameters
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 984, Column: 0 }
Function:        init_axis_parameters
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 997, Column: 0 }
Function:        init_axis_parameters
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1002, Column: 0 }
Function:        init_axis_parameters
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1006, Column: 0 }
Function:        init_axis_parameters
Args:
  - Callee:          asin
  - String:          ' will not be inlined into '
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1010, Column: 0 }
Function:        init_axis_parameters
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1007, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1016, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1019, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          ''''
  - Callee:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '355'
  - String:          ', threshold='
  - Threshold:       '45'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1060, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1062, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1083, Column: 0 }
Function:        init_higher_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_higher_axis
    DebugLoc:        { File: symmetry.c, Line: 1069, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1083, Column: 0 }
Function:        init_higher_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_higher_axis
    DebugLoc:        { File: symmetry.c, Line: 1069, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1074, Column: 0 }
Function:        init_higher_axis
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_higher_axis
    DebugLoc:        { File: symmetry.c, Line: 1069, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1082, Column: 0 }
Function:        init_higher_axis
Args:
  - String:          ''''
  - Callee:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_higher_axis
    DebugLoc:        { File: symmetry.c, Line: 1069, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1455'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1087, Column: 0 }
Function:        init_higher_axis
Args:
  - String:          ''''
  - Callee:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_higher_axis
    DebugLoc:        { File: symmetry.c, Line: 1069, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1660'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1088, Column: 0 }
Function:        init_higher_axis
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_higher_axis
    DebugLoc:        { File: symmetry.c, Line: 1069, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 1089, Column: 0 }
Function:        init_higher_axis
Args:
  - String:          ''''
  - Callee:          destroy_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 330, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          init_higher_axis
    DebugLoc:        { File: symmetry.c, Line: 1069, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '50'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          init_higher_axis
  - String:          ':'
  - Line:            '21'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1156, Column: 0 }
Function:        init_improper_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_improper_axis
    DebugLoc:        { File: symmetry.c, Line: 1134, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1167, Column: 0 }
Function:        init_improper_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_improper_axis
    DebugLoc:        { File: symmetry.c, Line: 1134, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1156, Column: 0 }
Function:        init_improper_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_improper_axis
    DebugLoc:        { File: symmetry.c, Line: 1134, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1167, Column: 0 }
Function:        init_improper_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_improper_axis
    DebugLoc:        { File: symmetry.c, Line: 1134, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1141, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_improper_axis
    DebugLoc:        { File: symmetry.c, Line: 1134, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1166, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          ''''
  - Callee:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_improper_axis
    DebugLoc:        { File: symmetry.c, Line: 1134, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1455'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1171, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          ''''
  - Callee:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_improper_axis
    DebugLoc:        { File: symmetry.c, Line: 1134, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1660'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1172, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_improper_axis
    DebugLoc:        { File: symmetry.c, Line: 1134, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 1173, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          ''''
  - Callee:          destroy_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 330, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          init_improper_axis
    DebugLoc:        { File: symmetry.c, Line: 1134, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '50'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          init_improper_axis
  - String:          ':'
  - Line:            '40'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1201, Column: 0 }
Function:        find_center_of_something
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          find_center_of_something
    DebugLoc:        { File: symmetry.c, Line: 1185, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1203, Column: 0 }
Function:        find_center_of_something
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          find_center_of_something
    DebugLoc:        { File: symmetry.c, Line: 1185, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1203, Column: 0 }
Function:        find_center_of_something
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          find_center_of_something
    DebugLoc:        { File: symmetry.c, Line: 1185, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1204, Column: 0 }
Function:        find_center_of_something
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_center_of_something
    DebugLoc:        { File: symmetry.c, Line: 1185, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1201, Column: 0 }
Function:        find_center_of_something
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          find_center_of_something
    DebugLoc:        { File: symmetry.c, Line: 1185, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1203, Column: 0 }
Function:        find_center_of_something
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          find_center_of_something
    DebugLoc:        { File: symmetry.c, Line: 1185, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1203, Column: 0 }
Function:        find_center_of_something
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          find_center_of_something
    DebugLoc:        { File: symmetry.c, Line: 1185, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1204, Column: 0 }
Function:        find_center_of_something
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_center_of_something
    DebugLoc:        { File: symmetry.c, Line: 1185, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1199, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_center_of_something
    DebugLoc:        { File: symmetry.c, Line: 1185, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 1208, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          ''''
  - Callee:          pow2
    DebugLoc:        { File: symmetry.c, Line: 193, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          find_center_of_something
    DebugLoc:        { File: symmetry.c, Line: 1185, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-30'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          find_center_of_something
  - String:          ':'
  - Line:            '24'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1223, Column: 0 }
Function:        find_planes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1225, Column: 0 }
Function:        find_planes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1226, Column: 0 }
Function:        find_planes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1236, Column: 0 }
Function:        find_planes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1238, Column: 0 }
Function:        find_planes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1239, Column: 0 }
Function:        find_planes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1223, Column: 0 }
Function:        find_planes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1225, Column: 0 }
Function:        find_planes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1226, Column: 0 }
Function:        find_planes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1236, Column: 0 }
Function:        find_planes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1238, Column: 0 }
Function:        find_planes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1239, Column: 0 }
Function:        find_planes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1219, Column: 0 }
Function:        find_planes
Args:
  - String:          ''''
  - Callee:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1015'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1234, Column: 0 }
Function:        find_planes
Args:
  - String:          ''''
  - Callee:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '695'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1253, Column: 0 }
Function:        find_inversion_centers
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          find_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 1249, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1253, Column: 0 }
Function:        find_inversion_centers
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          find_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 1249, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1252, Column: 0 }
Function:        find_inversion_centers
Args:
  - String:          ''''
  - Callee:          init_inversion_center
    DebugLoc:        { File: symmetry.c, Line: 757, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 1249, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '445'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1266, Column: 0 }
Function:        find_infinity_axis
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_infinity_axis
    DebugLoc:        { File: symmetry.c, Line: 1261, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1268, Column: 0 }
Function:        find_infinity_axis
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_infinity_axis
    DebugLoc:        { File: symmetry.c, Line: 1261, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1269, Column: 0 }
Function:        find_infinity_axis
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_infinity_axis
    DebugLoc:        { File: symmetry.c, Line: 1261, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1266, Column: 0 }
Function:        find_infinity_axis
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_infinity_axis
    DebugLoc:        { File: symmetry.c, Line: 1261, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1268, Column: 0 }
Function:        find_infinity_axis
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_infinity_axis
    DebugLoc:        { File: symmetry.c, Line: 1261, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1269, Column: 0 }
Function:        find_infinity_axis
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_infinity_axis
    DebugLoc:        { File: symmetry.c, Line: 1261, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1264, Column: 0 }
Function:        find_infinity_axis
Args:
  - String:          ''''
  - Callee:          init_ultimate_axis
    DebugLoc:        { File: symmetry.c, Line: 826, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_infinity_axis
    DebugLoc:        { File: symmetry.c, Line: 1261, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '720'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1280, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1285, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1285, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1286, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1307, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1308, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1323, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1324, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1350, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1351, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1359, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1280, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1285, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1285, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1286, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1307, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1308, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1323, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1324, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1350, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1351, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1359, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 1299, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          ''''
  - Callee:          pow2
    DebugLoc:        { File: symmetry.c, Line: 193, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-30'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          find_c2_axes
  - String:          ':'
  - Line:            '23'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          ''''
  - Callee:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1115'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          ''''
  - Callee:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1115'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 1334, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          ''''
  - Callee:          pow2
    DebugLoc:        { File: symmetry.c, Line: 193, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-30'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          find_c2_axes
  - String:          ':'
  - Line:            '58'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          ''''
  - Callee:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1115'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
Function:        find_higher_axes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_higher_axes
    DebugLoc:        { File: symmetry.c, Line: 1364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1384, Column: 0 }
Function:        find_higher_axes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_higher_axes
    DebugLoc:        { File: symmetry.c, Line: 1364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1385, Column: 0 }
Function:        find_higher_axes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_higher_axes
    DebugLoc:        { File: symmetry.c, Line: 1364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
Function:        find_higher_axes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_higher_axes
    DebugLoc:        { File: symmetry.c, Line: 1364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1384, Column: 0 }
Function:        find_higher_axes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_higher_axes
    DebugLoc:        { File: symmetry.c, Line: 1364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1385, Column: 0 }
Function:        find_higher_axes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_higher_axes
    DebugLoc:        { File: symmetry.c, Line: 1364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          ''''
  - Callee:          init_higher_axis
    DebugLoc:        { File: symmetry.c, Line: 1069, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_higher_axes
    DebugLoc:        { File: symmetry.c, Line: 1364, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '490'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1405, Column: 0 }
Function:        find_improper_axes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1396, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1407, Column: 0 }
Function:        find_improper_axes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1396, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1408, Column: 0 }
Function:        find_improper_axes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1396, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1405, Column: 0 }
Function:        find_improper_axes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1396, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1407, Column: 0 }
Function:        find_improper_axes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1396, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1408, Column: 0 }
Function:        find_improper_axes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1396, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1403, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          ''''
  - Callee:          init_improper_axis
    DebugLoc:        { File: symmetry.c, Line: 1134, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1396, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '750'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1423, Column: 0 }
Function:        report_planes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_planes
    DebugLoc:        { File: symmetry.c, Line: 1419, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1426, Column: 0 }
Function:        report_planes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_planes
    DebugLoc:        { File: symmetry.c, Line: 1419, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1428, Column: 0 }
Function:        report_planes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_planes
    DebugLoc:        { File: symmetry.c, Line: 1419, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1423, Column: 0 }
Function:        report_planes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_planes
    DebugLoc:        { File: symmetry.c, Line: 1419, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1426, Column: 0 }
Function:        report_planes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_planes
    DebugLoc:        { File: symmetry.c, Line: 1419, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1428, Column: 0 }
Function:        report_planes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_planes
    DebugLoc:        { File: symmetry.c, Line: 1419, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1427, Column: 0 }
Function:        report_planes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_planes
    DebugLoc:        { File: symmetry.c, Line: 1419, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1430, Column: 0 }
Function:        report_planes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_planes
    DebugLoc:        { File: symmetry.c, Line: 1419, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1431, Column: 0 }
Function:        report_planes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_planes
    DebugLoc:        { File: symmetry.c, Line: 1419, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1432, Column: 0 }
Function:        report_planes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_planes
    DebugLoc:        { File: symmetry.c, Line: 1419, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1441, Column: 0 }
Function:        report_inversion_centers
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 1439, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1443, Column: 0 }
Function:        report_inversion_centers
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 1439, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1444, Column: 0 }
Function:        report_inversion_centers
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 1439, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1441, Column: 0 }
Function:        report_inversion_centers
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 1439, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1443, Column: 0 }
Function:        report_inversion_centers
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 1439, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1444, Column: 0 }
Function:        report_inversion_centers
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 1439, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1445, Column: 0 }
Function:        report_inversion_centers
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 1439, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1446, Column: 0 }
Function:        report_inversion_centers
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 1439, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1459, Column: 0 }
Function:        report_axes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1462, Column: 0 }
Function:        report_axes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1464, Column: 0 }
Function:        report_axes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1459, Column: 0 }
Function:        report_axes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1462, Column: 0 }
Function:        report_axes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1464, Column: 0 }
Function:        report_axes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1463, Column: 0 }
Function:        report_axes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1466, Column: 0 }
Function:        report_axes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1468, Column: 0 }
Function:        report_axes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1469, Column: 0 }
Function:        report_axes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1470, Column: 0 }
Function:        report_axes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1472, Column: 0 }
Function:        report_axes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1486, Column: 0 }
Function:        report_improper_axes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1489, Column: 0 }
Function:        report_improper_axes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1491, Column: 0 }
Function:        report_improper_axes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1486, Column: 0 }
Function:        report_improper_axes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1489, Column: 0 }
Function:        report_improper_axes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1491, Column: 0 }
Function:        report_improper_axes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1490, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1493, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1495, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1496, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1497, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1499, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        report_and_reset_counters
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_and_reset_counters
    DebugLoc:        { File: symmetry.c, Line: 1512, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1529, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1534, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1539, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1544, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1549, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1554, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1529, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1534, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1539, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1544, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1549, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1554, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1527, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          find_center_of_something
    DebugLoc:        { File: symmetry.c, Line: 1185, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '450'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 1531, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          find_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 1249, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '65'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          find_symmetry_elements
  - String:          ':'
  - Line:            '6'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 1533, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          report_and_reset_counters
    DebugLoc:        { File: symmetry.c, Line: 1512, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '110'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          find_symmetry_elements
  - String:          ':'
  - Line:            '8'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1536, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '485'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 1538, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          report_and_reset_counters
    DebugLoc:        { File: symmetry.c, Line: 1512, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '110'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          find_symmetry_elements
  - String:          ':'
  - Line:            '13'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 1541, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          find_infinity_axis
    DebugLoc:        { File: symmetry.c, Line: 1261, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '185'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          find_symmetry_elements
  - String:          ':'
  - Line:            '16'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 1543, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          report_and_reset_counters
    DebugLoc:        { File: symmetry.c, Line: 1512, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '110'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          find_symmetry_elements
  - String:          ':'
  - Line:            '18'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1546, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1400'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 1548, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          report_and_reset_counters
    DebugLoc:        { File: symmetry.c, Line: 1512, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '110'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          find_symmetry_elements
  - String:          ':'
  - Line:            '23'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1551, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          find_higher_axes
    DebugLoc:        { File: symmetry.c, Line: 1364, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '435'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 1553, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          report_and_reset_counters
    DebugLoc:        { File: symmetry.c, Line: 1512, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '110'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          find_symmetry_elements
  - String:          ':'
  - Line:            '28'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1556, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          find_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1396, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '260'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 1558, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          report_and_reset_counters
    DebugLoc:        { File: symmetry.c, Line: 1512, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '110'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          find_symmetry_elements
  - String:          ':'
  - Line:            '33'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1252, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          init_inversion_center
    DebugLoc:        { File: symmetry.c, Line: 757, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '445'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1264, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          init_ultimate_axis
    DebugLoc:        { File: symmetry.c, Line: 826, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '720'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
Function:        sort_symmetry_elements
Args:
  - Callee:          qsort
  - String:          ' will not be inlined into '
  - Caller:          sort_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1579, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
Function:        sort_symmetry_elements
Args:
  - Callee:          qsort
  - String:          ' will not be inlined into '
  - Caller:          sort_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1579, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
Function:        sort_symmetry_elements
Args:
  - Callee:          qsort
  - String:          ' will not be inlined into '
  - Caller:          sort_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1579, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
Function:        sort_symmetry_elements
Args:
  - Callee:          qsort
  - String:          ' will not be inlined into '
  - Caller:          sort_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1579, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
Function:        sort_symmetry_elements
Args:
  - Callee:          qsort
  - String:          ' will not be inlined into '
  - Caller:          sort_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1579, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
Function:        sort_symmetry_elements
Args:
  - Callee:          qsort
  - String:          ' will not be inlined into '
  - Caller:          sort_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1579, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1594, Column: 0 }
Function:        report_symmetry_elements_verbose
Args:
  - String:          ''''
  - Callee:          report_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 1439, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_symmetry_elements_verbose
    DebugLoc:        { File: symmetry.c, Line: 1593, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '250'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1595, Column: 0 }
Function:        report_symmetry_elements_verbose
Args:
  - String:          ''''
  - Callee:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_symmetry_elements_verbose
    DebugLoc:        { File: symmetry.c, Line: 1593, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '505'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1596, Column: 0 }
Function:        report_symmetry_elements_verbose
Args:
  - String:          ''''
  - Callee:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_symmetry_elements_verbose
    DebugLoc:        { File: symmetry.c, Line: 1593, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '505'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1597, Column: 0 }
Function:        report_symmetry_elements_verbose
Args:
  - String:          ''''
  - Callee:          report_planes
    DebugLoc:        { File: symmetry.c, Line: 1419, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_symmetry_elements_verbose
    DebugLoc:        { File: symmetry.c, Line: 1593, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '365'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1605, Column: 0 }
Function:        summarize_symmetry_elements
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          summarize_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1602, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1606, Column: 0 }
Function:        summarize_symmetry_elements
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          summarize_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1602, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1605, Column: 0 }
Function:        summarize_symmetry_elements
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          summarize_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1602, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1606, Column: 0 }
Function:        summarize_symmetry_elements
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          summarize_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1602, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1617, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1622, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1622, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1623, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1628, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1633, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strlen
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1635, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strlen
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1638, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strcat
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strcat
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strcat
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strcat
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strcat
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1648, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strlen
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1649, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strcat
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1651, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1617, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1622, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1622, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1623, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1628, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1633, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strlen
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1635, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strlen
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1638, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strcat
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strcat
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strcat
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strcat
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strcat
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1648, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strlen
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1649, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strcat
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1651, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1632, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1637, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          ''''
  - Callee:          sprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1771, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          ''''
  - Callee:          sprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1771, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          ''''
  - Callee:          sprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1771, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          ''''
  - Callee:          sprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1771, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          ''''
  - Callee:          sprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1771, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1649, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          ''''
  - Callee:          sprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1771, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1664, Column: 0 }
Function:        identify_point_group
Args:
  - Callee:          strcmp
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group
    DebugLoc:        { File: symmetry.c, Line: 1658, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1678, Column: 0 }
Function:        identify_point_group
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group
    DebugLoc:        { File: symmetry.c, Line: 1658, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1681, Column: 0 }
Function:        identify_point_group
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group
    DebugLoc:        { File: symmetry.c, Line: 1658, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1683, Column: 0 }
Function:        identify_point_group
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group
    DebugLoc:        { File: symmetry.c, Line: 1658, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1685, Column: 0 }
Function:        identify_point_group
Args:
  - Callee:          strcmp
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group
    DebugLoc:        { File: symmetry.c, Line: 1658, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1664, Column: 0 }
Function:        identify_point_group
Args:
  - Callee:          strcmp
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group
    DebugLoc:        { File: symmetry.c, Line: 1658, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1678, Column: 0 }
Function:        identify_point_group
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group
    DebugLoc:        { File: symmetry.c, Line: 1658, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1681, Column: 0 }
Function:        identify_point_group
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group
    DebugLoc:        { File: symmetry.c, Line: 1658, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1683, Column: 0 }
Function:        identify_point_group
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group
    DebugLoc:        { File: symmetry.c, Line: 1658, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1685, Column: 0 }
Function:        identify_point_group
Args:
  - Callee:          strcmp
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group
    DebugLoc:        { File: symmetry.c, Line: 1658, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1671, Column: 0 }
Function:        identify_point_group
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          identify_point_group
    DebugLoc:        { File: symmetry.c, Line: 1658, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1686, Column: 0 }
Function:        identify_point_group
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          identify_point_group
    DebugLoc:        { File: symmetry.c, Line: 1658, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1691, Column: 0 }
Function:        identify_point_group
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          identify_point_group
    DebugLoc:        { File: symmetry.c, Line: 1658, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1703, Column: 0 }
Function:        identify_point_group1
Args:
  - Callee:          strcmp
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1718, Column: 0 }
Function:        identify_point_group1
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1722, Column: 0 }
Function:        identify_point_group1
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1725, Column: 0 }
Function:        identify_point_group1
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - Callee:          strcmp
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1737, Column: 0 }
Function:        identify_point_group1
Args:
  - Callee:          strcpy
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1703, Column: 0 }
Function:        identify_point_group1
Args:
  - Callee:          strcmp
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1718, Column: 0 }
Function:        identify_point_group1
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1722, Column: 0 }
Function:        identify_point_group1
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1725, Column: 0 }
Function:        identify_point_group1
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - Callee:          strcmp
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1737, Column: 0 }
Function:        identify_point_group1
Args:
  - Callee:          strcpy
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1710, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1729, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1735, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1753, Column: 0 }
Function:        read_coordinates
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1753, Column: 0 }
Function:        read_coordinates
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1757, Column: 0 }
Function:        read_coordinates
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1759, Column: 0 }
Function:        read_coordinates
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1759, Column: 0 }
Function:        read_coordinates
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1764, Column: 0 }
Function:        read_coordinates
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1753, Column: 0 }
Function:        read_coordinates
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1753, Column: 0 }
Function:        read_coordinates
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1757, Column: 0 }
Function:        read_coordinates
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1759, Column: 0 }
Function:        read_coordinates
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1759, Column: 0 }
Function:        read_coordinates
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1764, Column: 0 }
Function:        read_coordinates
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1752, Column: 0 }
Function:        read_coordinates
Args:
  - String:          ''''
  - Callee:          fscanf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1206, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1756, Column: 0 }
Function:        read_coordinates
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1763, Column: 0 }
Function:        read_coordinates
Args:
  - String:          ''''
  - Callee:          fscanf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1206, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1764, Column: 0 }
Function:        read_coordinates
Args:
  - String:          ''''
  - Callee:          fprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 837, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 3956, Column: 0 }
Function:        rank_symmetric_planes
Args:
  - String:          ''''
  - Callee:          mirror_atom
    DebugLoc:        { File: symmetry.c, Line: 611, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          rank_symmetric_planes
    DebugLoc:        { File: symmetry.c, Line: 3944, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '50'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          rank_symmetric_planes
  - String:          ':'
  - Line:            '13'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 4004, Column: 0 }
Function:        rank_symmetric_axes
Args:
  - String:          ''''
  - Callee:          rotate_atom
    DebugLoc:        { File: symmetry.c, Line: 794, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          rank_symmetric_axes
    DebugLoc:        { File: symmetry.c, Line: 3989, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '385'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 4025, Column: 0 }
Function:        rank_symmetric_axes
Args:
  - String:          ''''
  - Callee:          rotate_atom
    DebugLoc:        { File: symmetry.c, Line: 794, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          rank_symmetric_axes
    DebugLoc:        { File: symmetry.c, Line: 3989, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '385'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 4104, Column: 0 }
Function:        rank_symmetric_inversion_centers
Args:
  - String:          ''''
  - Callee:          invert_atom
    DebugLoc:        { File: symmetry.c, Line: 746, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          rank_symmetric_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 4092, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '15'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          rank_symmetric_inversion_centers
  - String:          ':'
  - Line:            '13'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 4054, Column: 0 }
Function:        rank_symmetric_improper_axes
Args:
  - String:          ''''
  - Callee:          rotate_reflect_atom
    DebugLoc:        { File: symmetry.c, Line: 1102, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          rank_symmetric_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 4042, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '375'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 4075, Column: 0 }
Function:        rank_symmetric_improper_axes
Args:
  - String:          ''''
  - Callee:          rotate_reflect_atom
    DebugLoc:        { File: symmetry.c, Line: 1102, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          rank_symmetric_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 4042, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '375'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 4544, Column: 0 }
Function:        point_group_calc
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 4546, Column: 0 }
Function:        point_group_calc
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 4546, Column: 0 }
Function:        point_group_calc
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
Function:        point_group_calc
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 4544, Column: 0 }
Function:        point_group_calc
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 4546, Column: 0 }
Function:        point_group_calc
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 4546, Column: 0 }
Function:        point_group_calc
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
Function:        point_group_calc
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1585'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 4557, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          sort_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1579, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '180'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          point_group_calc
  - String:          ':'
  - Line:            '21'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 4558, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          summarize_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1602, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '195'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          point_group_calc
  - String:          ':'
  - Line:            '22'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 4563, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          rank_symmetric_planes
  - String:          ''' inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-14460'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          point_group_calc
  - String:          ':'
  - Line:            '27'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 4564, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          rank_symmetric_axes
  - String:          ''' inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-14380'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          point_group_calc
  - String:          ':'
  - Line:            '28'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 4565, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          rank_symmetric_inversion_centers
  - String:          ''' inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-14495'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          point_group_calc
  - String:          ':'
  - Line:            '29'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 4566, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          rank_symmetric_improper_axes
  - String:          ''' inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-14395'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          point_group_calc
  - String:          ':'
  - Line:            '30'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: symmetry.c, Line: 4569, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          report_symmetry_elements_verbose
    DebugLoc:        { File: symmetry.c, Line: 1593, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '90'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          point_group_calc
  - String:          ':'
  - Line:            '33'
  - String:          ':'
  - Column:          '0'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 4570, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1255'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 4571, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '625'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 4025, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          rotate_atom
    DebugLoc:        { File: symmetry.c, Line: 794, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '385'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 4004, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          rotate_atom
    DebugLoc:        { File: symmetry.c, Line: 794, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '385'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 4075, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          rotate_reflect_atom
    DebugLoc:        { File: symmetry.c, Line: 1102, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '375'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 4054, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          rotate_reflect_atom
    DebugLoc:        { File: symmetry.c, Line: 1102, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '375'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1597, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          report_planes
    DebugLoc:        { File: symmetry.c, Line: 1419, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '365'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1596, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '505'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1595, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '505'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1594, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          report_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 1439, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '250'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 1392, Column: 0 }
Function:        sprintf
Args:
  - Callee:          __stdio_common_vsprintf
  - String:          ' will not be inlined into '
  - Caller:          sprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1771, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 1392, Column: 0 }
Function:        sprintf
Args:
  - Callee:          __stdio_common_vsprintf
  - String:          ' will not be inlined into '
  - Caller:          sprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1771, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 1392, Column: 0 }
Function:        sprintf
Args:
  - String:          ''''
  - Callee:          __local_stdio_printf_options
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h', 
                       Line: 90, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          sprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1771, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          noinline function attribute
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 1776, Column: 0 }
Function:        sprintf
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1774, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 1392, Column: 0 }
Function:        sprintf
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1392, Column: 0 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 645, Column: 0 }
Function:        fprintf
Args:
  - Callee:          __stdio_common_vfprintf
  - String:          ' will not be inlined into '
  - Caller:          fprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 837, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 645, Column: 0 }
Function:        fprintf
Args:
  - Callee:          __stdio_common_vfprintf
  - String:          ' will not be inlined into '
  - Caller:          fprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 837, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 645, Column: 0 }
Function:        fprintf
Args:
  - String:          ''''
  - Callee:          __local_stdio_printf_options
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h', 
                       Line: 90, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          fprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 837, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          noinline function attribute
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 841, Column: 0 }
Function:        fprintf
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 840, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 645, Column: 0 }
Function:        fprintf
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 645, Column: 0 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 960, Column: 0 }
Function:        printf
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 645, Column: 0 }
Function:        printf
Args:
  - Callee:          __stdio_common_vfprintf
  - String:          ' will not be inlined into '
  - Caller:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 960, Column: 0 }
Function:        printf
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 645, Column: 0 }
Function:        printf
Args:
  - Callee:          __stdio_common_vfprintf
  - String:          ' will not be inlined into '
  - Caller:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 645, Column: 0 }
Function:        printf
Args:
  - String:          ''''
  - Callee:          __local_stdio_printf_options
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h', 
                       Line: 90, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          noinline function attribute
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 960, Column: 0 }
Function:        printf
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 959, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 645, Column: 0 }
Function:        printf
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 645, Column: 0 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 1065, Column: 0 }
Function:        fscanf
Args:
  - Callee:          __stdio_common_vfscanf
  - String:          ' will not be inlined into '
  - Caller:          fscanf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1206, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 1065, Column: 0 }
Function:        fscanf
Args:
  - Callee:          __stdio_common_vfscanf
  - String:          ' will not be inlined into '
  - Caller:          fscanf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1206, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 1065, Column: 0 }
Function:        fscanf
Args:
  - String:          ''''
  - Callee:          __local_stdio_scanf_options
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h', 
                       Line: 100, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          fscanf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1206, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          noinline function attribute
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 1210, Column: 0 }
Function:        fscanf
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1209, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                   Line: 1065, Column: 0 }
Function:        fscanf
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1065, Column: 0 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 201, Column: 0 }
Function:        establish_pairs
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 206, Column: 0 }
Function:        establish_pairs
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 206, Column: 0 }
Function:        establish_pairs
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 207, Column: 0 }
Function:        establish_pairs
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 233, Column: 0 }
Function:        establish_pairs
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 241, Column: 0 }
Function:        establish_pairs
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 201, Column: 0 }
Function:        establish_pairs
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 206, Column: 0 }
Function:        establish_pairs
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 206, Column: 0 }
Function:        establish_pairs
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 207, Column: 0 }
Function:        establish_pairs
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 233, Column: 0 }
Function:        establish_pairs
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 241, Column: 0 }
Function:        establish_pairs
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 211, Column: 0 }
Function:        establish_pairs
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
Function:        establish_pairs
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 232, Column: 0 }
Function:        establish_pairs
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 238, Column: 0 }
Function:        establish_pairs
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 217, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 217, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 209, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 211, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 216, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 217, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 230, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 238, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 210, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 210, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 210, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 211, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 216, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 217, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 230, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 236, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 238, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 209, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 209, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  load
    DebugLoc:        { File: symmetry.c, Line: 201, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 210, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 236, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 238, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 211, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 238, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 238, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 238, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 211, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 238, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 211, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 211, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 216, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 230, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 216, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 230, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 217, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 201, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 217, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 201, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 237, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 221, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 221, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 221, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 217, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 217, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: symmetry.c, Line: 217, Column: 0 }
Function:        establish_pairs
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 230, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 216, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: symmetry.c, Line: 230, Column: 0 }
Function:        establish_pairs
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 236, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 210, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 236, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 210, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 236, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 210, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 238, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 236, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 231, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 231, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 209, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 201, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 236, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 209, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 201, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 238, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 210, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 236, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 238, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 211, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 238, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 238, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 238, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 211, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 238, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 211, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 211, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 216, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 230, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 216, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 230, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 217, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 201, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 217, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 201, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 237, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 221, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 221, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 221, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 217, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 217, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: symmetry.c, Line: 217, Column: 0 }
Function:        establish_pairs
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 230, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 216, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 236, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 210, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 236, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 210, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 236, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 210, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 238, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 236, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 231, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 231, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 209, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 201, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 236, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 209, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 201, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 238, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 210, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 236, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 238, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 211, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 238, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 238, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 238, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 211, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 238, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 211, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 211, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 216, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 230, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 216, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 230, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 217, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 201, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 217, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 201, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 237, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 221, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 221, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 221, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 217, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 217, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 230, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 216, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 236, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 210, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 236, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 210, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 236, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 210, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 238, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 236, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 231, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 231, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 209, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 201, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 236, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 209, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 201, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 238, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 217, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: symmetry.c, Line: 217, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'sinking '
  - Inst:            trunc
    DebugLoc:        { File: symmetry.c, Line: 217, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 210, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 211, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 216, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 217, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 230, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 236, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 238, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 209, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1115, Column: 0 }
Function:        rotate_reflect_atom
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 1115, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1115, Column: 0 }
Function:        rotate_reflect_atom
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 1115, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1128, Column: 0 }
Function:        rotate_reflect_atom
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 1128, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1128, Column: 0 }
Function:        rotate_reflect_atom
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 1128, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1122, Column: 0 }
Function:        rotate_reflect_atom
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1121, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1122, Column: 0 }
Function:        rotate_reflect_atom
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1121, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1123, Column: 0 }
Function:        rotate_reflect_atom
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1121, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 1128, Column: 0 }
Function:        rotate_reflect_atom
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  load
    DebugLoc:        { File: symmetry.c, Line: 1115, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1122, Column: 0 }
Function:        rotate_reflect_atom
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1121, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1122, Column: 0 }
Function:        rotate_reflect_atom
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1121, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1123, Column: 0 }
Function:        rotate_reflect_atom
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1121, Column: 0 }
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 261, Column: 0 }
Function:        check_transform_order
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          check_transform_order
    DebugLoc:        { File: symmetry.c, Line: 247, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 269, Column: 0 }
Function:        check_transform_order
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          check_transform_order
    DebugLoc:        { File: symmetry.c, Line: 247, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 275, Column: 0 }
Function:        check_transform_order
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          check_transform_order
    DebugLoc:        { File: symmetry.c, Line: 247, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 251, Column: 0 }
Function:        check_transform_order
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 251, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 252, Column: 0 }
Function:        check_transform_order
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 252, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 252, Column: 0 }
Function:        check_transform_order
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 252, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 254, Column: 0 }
Function:        check_transform_order
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 254, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 254, Column: 0 }
Function:        check_transform_order
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 259, Column: 0 }
Function:        check_transform_order
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 259, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 259, Column: 0 }
Function:        check_transform_order
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 0, Column: 0 }
Function:        check_transform_order
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  load
    DebugLoc:        { File: symmetry.c, Line: 252, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 254, Column: 0 }
Function:        check_transform_order
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 259, Column: 0 }
Function:        check_transform_order
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        same_transform
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        same_transform
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        same_transform
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        same_transform
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        same_transform
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 310, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 314, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 314, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 315, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 317, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 319, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 319, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 320, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 310, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 314, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 314, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 315, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 317, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 319, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 319, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 320, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 322, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 323, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 323, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 323, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 322, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 322, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  load
    DebugLoc:        { File: symmetry.c, Line: 317, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 323, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  bitcast
    DebugLoc:        { File: symmetry.c, Line: 318, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 322, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  load
    DebugLoc:        { File: symmetry.c, Line: 317, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 323, Column: 0 }
Function:        alloc_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: symmetry.c, Line: 323, Column: 0 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 333, Column: 0 }
Function:        destroy_symmetry_element
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          destroy_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 330, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 334, Column: 0 }
Function:        destroy_symmetry_element
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          destroy_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 330, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 333, Column: 0 }
Function:        destroy_symmetry_element
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          destroy_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 330, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 334, Column: 0 }
Function:        destroy_symmetry_element
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          destroy_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 330, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 353, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          check_transform_quality
    DebugLoc:        { File: symmetry.c, Line: 340, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 349, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 349, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 349, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: symmetry.c, Line: 349, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 345, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 349, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 352, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 346, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 346, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 346, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 349, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 352, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 345, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 346, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 349, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 352, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 345, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 345, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 353, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 346, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 349, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 352, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 345, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 345, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 353, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 346, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 349, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 352, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 345, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 375, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 375, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 376, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 394, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 394, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 395, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 375, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 375, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 376, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 394, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 394, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 395, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        eval_optimization_target_function
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        eval_optimization_target_function
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 405, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 405, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 405, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: symmetry.c, Line: 405, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 401, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 402, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 405, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 402, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 402, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 402, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 402, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 403, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 403, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 403, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 405, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 401, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 393, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 374, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 379, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 393, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 374, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 384, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 402, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 402, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: symmetry.c, Line: 402, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 403, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 402, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 403, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 402, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 405, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 402, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 402, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 401, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 401, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 402, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 412, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 379, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 412, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 384, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 412, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 398, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 412, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 402, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 393, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 374, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 379, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 393, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 374, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 384, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 402, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 402, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 403, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 402, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 403, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 402, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 405, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 402, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 402, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 401, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 401, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 402, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 412, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 402, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 412, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 379, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 412, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 384, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 412, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 398, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 402, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 403, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 405, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 401, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 445, Column: 0 }
Function:        optimize_transformation_params
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 445, Column: 0 }
Function:        optimize_transformation_params
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 446, Column: 0 }
Function:        optimize_transformation_params
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 455, Column: 0 }
Function:        optimize_transformation_params
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 463, Column: 0 }
Function:        optimize_transformation_params
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 546, Column: 0 }
Function:        optimize_transformation_params
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 445, Column: 0 }
Function:        optimize_transformation_params
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 445, Column: 0 }
Function:        optimize_transformation_params
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 446, Column: 0 }
Function:        optimize_transformation_params
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 455, Column: 0 }
Function:        optimize_transformation_params
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 463, Column: 0 }
Function:        optimize_transformation_params
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 546, Column: 0 }
Function:        optimize_transformation_params
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 451, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '620'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 471, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '600'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 474, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '600'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 478, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 499, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '600'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 513, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '600'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 514, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 519, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 523, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 542, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          eval_optimization_target_function
    DebugLoc:        { File: symmetry.c, Line: 364, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '600'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 547, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 469, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 472, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 475, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 478, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 469, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 472, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 475, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            fmul
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 478, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 495, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: symmetry.c, Line: 495, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 508, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 502, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: symmetry.c, Line: 502, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 508, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 454, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 459, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 462, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 421, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 489, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 509, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 509, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 514, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 519, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 523, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 454, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 459, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 462, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 421, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            bitcast
    DebugLoc:        { File: symmetry.c, Line: 421, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 421, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 421, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 421, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            bitcast
    DebugLoc:        { File: symmetry.c, Line: 421, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 421, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 468, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: symmetry.c, Line: 468, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 481, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: symmetry.c, Line: 481, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 489, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 490, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: symmetry.c, Line: 490, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 495, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: symmetry.c, Line: 495, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 502, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: symmetry.c, Line: 502, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 509, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 509, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 510, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: symmetry.c, Line: 510, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 514, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 515, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: symmetry.c, Line: 515, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 519, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 523, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 524, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: symmetry.c, Line: 524, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 535, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: symmetry.c, Line: 535, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 531, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: symmetry.c, Line: 531, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 451, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 454, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 451, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 454, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 455, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 459, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 451, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 459, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 462, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 451, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 462, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 463, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 421, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 439, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 451, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 421, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 439, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 469, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 475, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 478, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 469, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 475, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 451, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 469, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 475, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: symmetry.c, Line: 469, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 421, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 478, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 421, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 474, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 472, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 469, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 471, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 471, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 475, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 472, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 474, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 478, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 474, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 469, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 475, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 478, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 484, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: symmetry.c, Line: 483, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 485, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: symmetry.c, Line: 485, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 489, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 509, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 451, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 489, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 509, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 489, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 509, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 478, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 489, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 509, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 474, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 421, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 478, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 421, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 474, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 499, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 508, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 499, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 509, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 499, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: symmetry.c, Line: 509, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 509, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 489, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 499, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 499, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 514, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 513, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 519, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 514, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 514, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 523, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 519, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 519, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 513, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 514, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 519, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 523, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 513, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 514, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 519, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 523, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 513, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 514, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 519, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 523, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 499, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 543, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 542, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 544, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 542, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 544, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 542, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 451, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 454, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 451, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 454, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 455, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 459, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 451, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 459, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 462, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 451, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 462, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 463, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 421, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 439, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 451, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 421, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 439, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 469, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 451, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 469, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 421, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 478, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 421, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 474, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 472, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 469, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 471, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 471, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 475, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 472, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 474, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 478, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 474, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 469, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 475, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 478, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 489, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 509, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 451, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 489, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 509, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 489, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 509, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 478, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 489, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 509, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 474, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 421, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 478, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 421, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 474, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 499, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 508, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 499, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 509, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 499, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 509, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 489, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 499, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 499, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 514, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 513, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 519, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 514, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 514, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 523, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 519, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 519, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 513, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 514, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 519, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 523, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 513, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 514, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 519, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 523, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 499, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 523, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 513, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 514, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 519, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 543, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 542, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 544, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 542, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 544, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 542, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 472, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 475, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 478, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 469, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 495, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: symmetry.c, Line: 495, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 502, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: symmetry.c, Line: 502, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 508, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 454, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 459, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 462, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 421, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 468, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: symmetry.c, Line: 468, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 469, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 481, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: symmetry.c, Line: 481, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 489, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 490, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: symmetry.c, Line: 490, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 495, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: symmetry.c, Line: 495, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 502, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: symmetry.c, Line: 502, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 509, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 509, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 510, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: symmetry.c, Line: 510, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 514, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 515, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: symmetry.c, Line: 515, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 519, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 523, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 524, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: symmetry.c, Line: 524, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 535, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: symmetry.c, Line: 535, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 531, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: symmetry.c, Line: 531, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 559, Column: 0 }
Function:        refine_symmetry_element
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 592, Column: 0 }
Function:        refine_symmetry_element
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 598, Column: 0 }
Function:        refine_symmetry_element
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 559, Column: 0 }
Function:        refine_symmetry_element
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 592, Column: 0 }
Function:        refine_symmetry_element
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 598, Column: 0 }
Function:        refine_symmetry_element
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          ''''
  - Callee:          establish_pairs
    DebugLoc:        { File: symmetry.c, Line: 199, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '825'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 565, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 572, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 579, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 586, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 590, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          ''''
  - Callee:          check_transform_order
    DebugLoc:        { File: symmetry.c, Line: 247, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '345'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 595, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          ''''
  - Callee:          optimize_transformation_params
    DebugLoc:        { File: symmetry.c, Line: 432, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1885'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 353, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 562, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 562, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 563, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 563, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 563, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 297, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: symmetry.c, Line: 297, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 569, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 569, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 570, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 570, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 570, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 297, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: symmetry.c, Line: 297, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 576, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 576, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 577, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 577, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 577, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 297, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: symmetry.c, Line: 297, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 583, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 583, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 584, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 584, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 584, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 297, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: symmetry.c, Line: 297, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 349, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 349, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 349, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: symmetry.c, Line: 349, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 345, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 349, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 352, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 346, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 346, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 346, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 349, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 352, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 345, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 558, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 559, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 562, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 563, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 569, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 570, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 576, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 577, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 583, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 584, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 345, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 595, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 346, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 346, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 595, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 595, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 349, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 595, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 349, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 352, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 345, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 345, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 601, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 595, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 601, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 353, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 597, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 598, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 353, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 353, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 597, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 353, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 591, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 590, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 592, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 590, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 585, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 586, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 578, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 579, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 571, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 572, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 564, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 565, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 558, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 559, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 562, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 563, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 569, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 570, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 576, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 577, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 583, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 584, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 345, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 595, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 595, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 346, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 346, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 595, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 595, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 349, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 352, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 345, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 345, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 601, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 601, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 595, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 353, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 597, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 598, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 353, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 353, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 597, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 353, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 591, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 590, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 592, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 590, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 585, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 586, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 578, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 579, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 571, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 572, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 564, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 565, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 557, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'sinking '
  - Inst:            trunc
    DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 296, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: symmetry.c, Line: 296, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'sinking '
  - Inst:            trunc
    DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 296, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: symmetry.c, Line: 296, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'sinking '
  - Inst:            trunc
    DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 296, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: symmetry.c, Line: 296, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'sinking '
  - Inst:            trunc
    DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: symmetry.c, Line: 290, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 296, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: symmetry.c, Line: 296, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 346, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 349, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 352, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 345, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 620, Column: 0 }
Function:        mirror_atom
Args:
  - String:          'hoisting '
  - Inst:            fmul
    DebugLoc:        { File: symmetry.c, Line: 620, Column: 0 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 643, Column: 0 }
Function:        init_mirror_plane
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 644, Column: 0 }
Function:        init_mirror_plane
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 659, Column: 0 }
Function:        init_mirror_plane
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 333, Column: 0 }
Function:        init_mirror_plane
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 334, Column: 0 }
Function:        init_mirror_plane
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 643, Column: 0 }
Function:        init_mirror_plane
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 644, Column: 0 }
Function:        init_mirror_plane
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 659, Column: 0 }
Function:        init_mirror_plane
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 333, Column: 0 }
Function:        init_mirror_plane
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 334, Column: 0 }
Function:        init_mirror_plane
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 627, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          ''''
  - Callee:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '355'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 631, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 643, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          ''''
  - Callee:          fprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 837, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 657, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 658, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          ''''
  - Callee:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1640'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 637, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 637, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 637, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: symmetry.c, Line: 637, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 637, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: symmetry.c, Line: 637, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        init_mirror_plane
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 631, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 627, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 632, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 627, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 632, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 631, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 637, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 627, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 637, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 631, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 642, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 627, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 642, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 631, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 657, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 631, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 631, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 659, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 657, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 658, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 332, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 658, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 332, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 659, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 631, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 627, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 632, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 631, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 632, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 627, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 637, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 631, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 637, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 627, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 642, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 631, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 642, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 627, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 657, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 631, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 631, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 659, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 657, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 658, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 332, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 658, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 332, Column: 0 }
Function:        init_mirror_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 659, Column: 0 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 676, Column: 0 }
Function:        init_ultimate_plane
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 714, Column: 0 }
Function:        init_ultimate_plane
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 715, Column: 0 }
Function:        init_ultimate_plane
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 735, Column: 0 }
Function:        init_ultimate_plane
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 333, Column: 0 }
Function:        init_ultimate_plane
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 334, Column: 0 }
Function:        init_ultimate_plane
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 676, Column: 0 }
Function:        init_ultimate_plane
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 714, Column: 0 }
Function:        init_ultimate_plane
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 715, Column: 0 }
Function:        init_ultimate_plane
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 735, Column: 0 }
Function:        init_ultimate_plane
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 333, Column: 0 }
Function:        init_ultimate_plane
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 334, Column: 0 }
Function:        init_ultimate_plane
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 669, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          ''''
  - Callee:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '355'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 714, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          ''''
  - Callee:          fprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 837, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 734, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          ''''
  - Callee:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1530'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 687, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 687, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 687, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: symmetry.c, Line: 687, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 687, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: symmetry.c, Line: 687, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        init_ultimate_plane
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 687, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 687, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 687, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: symmetry.c, Line: 687, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 684, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 684, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 687, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 687, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 687, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        init_ultimate_plane
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 732, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 733, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 733, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 733, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 733, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 732, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 676, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 669, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 677, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 677, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 669, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 677, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 677, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 676, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 684, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 669, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 684, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 676, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 687, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 669, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 687, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 676, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 693, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 698, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 694, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 699, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 694, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 682, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 695, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 700, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 695, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 682, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 699, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 699, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 682, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 700, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 700, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 682, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 706, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 682, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 707, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 682, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 718, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 682, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 718, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 700, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 722, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 682, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 722, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 700, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 730, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 669, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 730, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 676, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 730, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 722, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 732, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  load
    DebugLoc:        { File: symmetry.c, Line: 684, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 732, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 684, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 733, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 735, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 676, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 734, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 332, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 734, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 332, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 735, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 676, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 669, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 677, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 677, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 676, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 677, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 677, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 669, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 684, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 669, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 684, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 676, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 687, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 676, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 687, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 669, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 694, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 682, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 695, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 700, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 695, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 682, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 699, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 699, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 682, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 700, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 700, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 682, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 706, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 682, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 707, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 682, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 718, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 682, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 722, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 682, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 730, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 676, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 730, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 669, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 730, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 722, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 732, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 684, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 733, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 735, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 676, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 734, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 332, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 734, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 332, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 735, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 732, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 751, Column: 0 }
Function:        invert_atom
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 751, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 751, Column: 0 }
Function:        invert_atom
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 751, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 751, Column: 0 }
Function:        invert_atom
Args:
  - String:          'hoisting '
  - Inst:            fmul
    DebugLoc:        { File: symmetry.c, Line: 751, Column: 0 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 762, Column: 0 }
Function:        init_inversion_center
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_inversion_center
    DebugLoc:        { File: symmetry.c, Line: 757, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 782, Column: 0 }
Function:        init_inversion_center
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_inversion_center
    DebugLoc:        { File: symmetry.c, Line: 757, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 333, Column: 0 }
Function:        init_inversion_center
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_inversion_center
    DebugLoc:        { File: symmetry.c, Line: 757, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 334, Column: 0 }
Function:        init_inversion_center
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_inversion_center
    DebugLoc:        { File: symmetry.c, Line: 757, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 762, Column: 0 }
Function:        init_inversion_center
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_inversion_center
    DebugLoc:        { File: symmetry.c, Line: 757, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 782, Column: 0 }
Function:        init_inversion_center
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_inversion_center
    DebugLoc:        { File: symmetry.c, Line: 757, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 333, Column: 0 }
Function:        init_inversion_center
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_inversion_center
    DebugLoc:        { File: symmetry.c, Line: 757, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 334, Column: 0 }
Function:        init_inversion_center
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_inversion_center
    DebugLoc:        { File: symmetry.c, Line: 757, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 758, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          ''''
  - Callee:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_inversion_center
    DebugLoc:        { File: symmetry.c, Line: 757, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '355'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 780, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_inversion_center
    DebugLoc:        { File: symmetry.c, Line: 757, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 781, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          ''''
  - Callee:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_inversion_center
    DebugLoc:        { File: symmetry.c, Line: 757, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1640'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        init_inversion_center
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 762, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 758, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 763, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 758, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 763, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 762, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 768, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 758, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 768, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 762, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 772, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 758, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 772, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 762, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 780, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 762, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 762, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 782, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 780, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 781, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 332, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 781, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 332, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 782, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 762, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 758, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 763, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 758, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 763, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 762, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 768, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 758, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 768, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 762, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 772, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 758, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 772, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 762, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 780, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 762, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 762, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 782, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 780, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 781, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 332, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 781, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 332, Column: 0 }
Function:        init_inversion_center
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 782, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 807, Column: 0 }
Function:        rotate_atom
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 807, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 807, Column: 0 }
Function:        rotate_atom
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 807, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 820, Column: 0 }
Function:        rotate_atom
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 820, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 820, Column: 0 }
Function:        rotate_atom
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 820, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 814, Column: 0 }
Function:        rotate_atom
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 813, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 814, Column: 0 }
Function:        rotate_atom
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 813, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 815, Column: 0 }
Function:        rotate_atom
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 813, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 820, Column: 0 }
Function:        rotate_atom
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  load
    DebugLoc:        { File: symmetry.c, Line: 807, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 814, Column: 0 }
Function:        rotate_atom
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 813, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 814, Column: 0 }
Function:        rotate_atom
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 813, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 815, Column: 0 }
Function:        rotate_atom
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 813, Column: 0 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 832, Column: 0 }
Function:        init_ultimate_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_axis
    DebugLoc:        { File: symmetry.c, Line: 826, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 874, Column: 0 }
Function:        init_ultimate_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_axis
    DebugLoc:        { File: symmetry.c, Line: 826, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 333, Column: 0 }
Function:        init_ultimate_axis
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_axis
    DebugLoc:        { File: symmetry.c, Line: 826, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 334, Column: 0 }
Function:        init_ultimate_axis
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_axis
    DebugLoc:        { File: symmetry.c, Line: 826, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 832, Column: 0 }
Function:        init_ultimate_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_axis
    DebugLoc:        { File: symmetry.c, Line: 826, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 874, Column: 0 }
Function:        init_ultimate_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_axis
    DebugLoc:        { File: symmetry.c, Line: 826, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 333, Column: 0 }
Function:        init_ultimate_axis
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_axis
    DebugLoc:        { File: symmetry.c, Line: 826, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 334, Column: 0 }
Function:        init_ultimate_axis
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_ultimate_axis
    DebugLoc:        { File: symmetry.c, Line: 826, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 827, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          ''''
  - Callee:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_ultimate_axis
    DebugLoc:        { File: symmetry.c, Line: 826, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '355'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 873, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          ''''
  - Callee:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_ultimate_axis
    DebugLoc:        { File: symmetry.c, Line: 826, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1530'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 841, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 841, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 841, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: symmetry.c, Line: 841, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 839, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 839, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 841, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 841, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 841, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        init_ultimate_axis
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        init_ultimate_axis
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 871, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 872, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 872, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 872, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 872, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 871, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 832, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 827, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 833, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 833, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 827, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 833, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 833, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 832, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 839, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 827, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 839, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 832, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 841, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 827, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 841, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 832, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 841, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 827, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 841, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 832, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 842, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 848, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 842, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 846, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 842, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 838, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 846, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 846, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 848, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 846, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 846, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 838, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 848, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 848, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 838, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 851, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 838, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 855, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 855, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 838, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 858, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 855, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 860, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 827, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 860, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 832, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 864, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 827, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 864, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 832, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 871, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  load
    DebugLoc:        { File: symmetry.c, Line: 839, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 871, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 839, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 872, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 874, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 832, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 873, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 332, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 873, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 332, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 874, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 832, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 827, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 833, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 833, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 827, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 833, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 833, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 832, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 839, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 827, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 839, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 832, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 841, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 827, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 841, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 832, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 841, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 827, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 841, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 832, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 842, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 838, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 846, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 846, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 838, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 848, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 848, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 838, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 851, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 838, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 855, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 855, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 838, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 858, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 855, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 860, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 827, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 860, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 832, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 864, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 827, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 864, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 832, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 871, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 839, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 872, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 874, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 832, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 873, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 332, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 873, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 332, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 874, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 871, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 903, Column: 0 }
Function:        init_c2_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 930, Column: 0 }
Function:        init_c2_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 935, Column: 0 }
Function:        init_c2_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 960, Column: 0 }
Function:        init_c2_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 333, Column: 0 }
Function:        init_c2_axis
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 334, Column: 0 }
Function:        init_c2_axis
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 903, Column: 0 }
Function:        init_c2_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 930, Column: 0 }
Function:        init_c2_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 935, Column: 0 }
Function:        init_c2_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 960, Column: 0 }
Function:        init_c2_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 333, Column: 0 }
Function:        init_c2_axis
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 334, Column: 0 }
Function:        init_c2_axis
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 891, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 906, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          ''''
  - Callee:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '355'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 959, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          ''''
  - Callee:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1640'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 896, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 896, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 896, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: symmetry.c, Line: 896, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 897, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: symmetry.c, Line: 897, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        init_c2_axis
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 924, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 924, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 924, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: symmetry.c, Line: 924, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 924, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: symmetry.c, Line: 924, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 932, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 932, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 937, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 937, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 937, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: symmetry.c, Line: 937, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 937, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: symmetry.c, Line: 937, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        init_c2_axis
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        init_c2_axis
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 893, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 893, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 891, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 896, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 924, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 891, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 896, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 891, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 901, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 891, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 911, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 906, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 915, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 906, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 924, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 896, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 906, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 924, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 906, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 928, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 901, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 906, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 929, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 906, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 930, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 890, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 906, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 932, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 929, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 930, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: symmetry.c, Line: 932, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 935, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 890, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 906, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 937, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 924, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 935, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: symmetry.c, Line: 937, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 938, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 937, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 938, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 937, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 938, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 906, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 938, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 935, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 946, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 937, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 957, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 924, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 960, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 890, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 959, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 332, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 959, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 332, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 960, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 902, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 891, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 903, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 890, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 891, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 893, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 893, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 891, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 896, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 924, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 891, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 896, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 891, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 901, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 891, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 911, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 906, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 915, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 906, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 924, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 896, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 906, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 924, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 906, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 928, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 901, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 906, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 929, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 906, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 930, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 890, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 906, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 932, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 929, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 930, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 935, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 890, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 906, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 937, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 924, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 935, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 938, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 937, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 938, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 937, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 938, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 906, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 938, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 935, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 946, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 937, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 957, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 924, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 960, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 890, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 959, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 332, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 959, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 332, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 960, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 902, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 891, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 903, Column: 0 }
Function:        init_c2_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 890, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 891, Column: 0 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 984, Column: 0 }
Function:        init_axis_parameters
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 997, Column: 0 }
Function:        init_axis_parameters
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1002, Column: 0 }
Function:        init_axis_parameters
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1006, Column: 0 }
Function:        init_axis_parameters
Args:
  - Callee:          asin
  - String:          ' will not be inlined into '
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1010, Column: 0 }
Function:        init_axis_parameters
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 984, Column: 0 }
Function:        init_axis_parameters
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 997, Column: 0 }
Function:        init_axis_parameters
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1002, Column: 0 }
Function:        init_axis_parameters
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1006, Column: 0 }
Function:        init_axis_parameters
Args:
  - Callee:          asin
  - String:          ' will not be inlined into '
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1010, Column: 0 }
Function:        init_axis_parameters
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1007, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1016, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1019, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          ''''
  - Callee:          alloc_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 309, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '355'
  - String:          ', threshold='
  - Threshold:       '45'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1060, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1062, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        init_axis_parameters
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        init_axis_parameters
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1008, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1007, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1009, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1007, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1010, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1007, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1007, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1023, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1019, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1027, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1019, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1035, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1019, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1035, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1019, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1035, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1019, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1035, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1019, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1035, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1019, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1035, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1019, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1036, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1019, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1036, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1019, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1036, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1019, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1055, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1053, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1058, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1058, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1053, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1059, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1007, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1019, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1060, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1027, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1060, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1032, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1060, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1027, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1060, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1032, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1060, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1027, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1062, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1037, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1058, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1062, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1036, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1058, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1062, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1035, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1058, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1015, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1007, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1016, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1007, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1007, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1008, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1007, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1009, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1007, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1010, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1007, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1007, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1023, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1019, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1027, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1019, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1035, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1019, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1035, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1019, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1035, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1019, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1035, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1019, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1035, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1019, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1035, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1019, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1036, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1019, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1036, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1019, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1036, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1019, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1055, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1053, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1058, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1058, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1053, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1059, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1007, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1019, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1060, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1027, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1060, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1032, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1060, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1027, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1060, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1032, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1060, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1027, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1062, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1037, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1058, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1062, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1036, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1058, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1062, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1035, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1058, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1015, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1007, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1016, Column: 0 }
Function:        init_axis_parameters
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1007, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1007, Column: 0 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1083, Column: 0 }
Function:        init_higher_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_higher_axis
    DebugLoc:        { File: symmetry.c, Line: 1069, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 333, Column: 0 }
Function:        init_higher_axis
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_higher_axis
    DebugLoc:        { File: symmetry.c, Line: 1069, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 334, Column: 0 }
Function:        init_higher_axis
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_higher_axis
    DebugLoc:        { File: symmetry.c, Line: 1069, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1083, Column: 0 }
Function:        init_higher_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_higher_axis
    DebugLoc:        { File: symmetry.c, Line: 1069, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 333, Column: 0 }
Function:        init_higher_axis
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_higher_axis
    DebugLoc:        { File: symmetry.c, Line: 1069, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 334, Column: 0 }
Function:        init_higher_axis
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_higher_axis
    DebugLoc:        { File: symmetry.c, Line: 1069, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1074, Column: 0 }
Function:        init_higher_axis
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_higher_axis
    DebugLoc:        { File: symmetry.c, Line: 1069, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1082, Column: 0 }
Function:        init_higher_axis
Args:
  - String:          ''''
  - Callee:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_higher_axis
    DebugLoc:        { File: symmetry.c, Line: 1069, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1365'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1087, Column: 0 }
Function:        init_higher_axis
Args:
  - String:          ''''
  - Callee:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_higher_axis
    DebugLoc:        { File: symmetry.c, Line: 1069, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1640'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1088, Column: 0 }
Function:        init_higher_axis
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_higher_axis
    DebugLoc:        { File: symmetry.c, Line: 1069, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1078, Column: 0 }
Function:        init_higher_axis
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 1078, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1078, Column: 0 }
Function:        init_higher_axis
Args:
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: symmetry.c, Line: 1078, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1079, Column: 0 }
Function:        init_higher_axis
Args:
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: symmetry.c, Line: 1079, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1080, Column: 0 }
Function:        init_higher_axis
Args:
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: symmetry.c, Line: 1080, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1075, Column: 0 }
Function:        init_higher_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1074, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1078, Column: 0 }
Function:        init_higher_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1074, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1078, Column: 0 }
Function:        init_higher_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1074, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1088, Column: 0 }
Function:        init_higher_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1074, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1087, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1088, Column: 0 }
Function:        init_higher_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1087, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 332, Column: 0 }
Function:        init_higher_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1087, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 332, Column: 0 }
Function:        init_higher_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1088, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1083, Column: 0 }
Function:        init_higher_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1074, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1082, Column: 0 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1156, Column: 0 }
Function:        init_improper_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_improper_axis
    DebugLoc:        { File: symmetry.c, Line: 1134, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1167, Column: 0 }
Function:        init_improper_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_improper_axis
    DebugLoc:        { File: symmetry.c, Line: 1134, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 333, Column: 0 }
Function:        init_improper_axis
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_improper_axis
    DebugLoc:        { File: symmetry.c, Line: 1134, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 334, Column: 0 }
Function:        init_improper_axis
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_improper_axis
    DebugLoc:        { File: symmetry.c, Line: 1134, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1156, Column: 0 }
Function:        init_improper_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_improper_axis
    DebugLoc:        { File: symmetry.c, Line: 1134, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1167, Column: 0 }
Function:        init_improper_axis
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          init_improper_axis
    DebugLoc:        { File: symmetry.c, Line: 1134, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 333, Column: 0 }
Function:        init_improper_axis
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_improper_axis
    DebugLoc:        { File: symmetry.c, Line: 1134, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 334, Column: 0 }
Function:        init_improper_axis
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          init_improper_axis
    DebugLoc:        { File: symmetry.c, Line: 1134, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1141, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_improper_axis
    DebugLoc:        { File: symmetry.c, Line: 1134, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1166, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          ''''
  - Callee:          init_axis_parameters
    DebugLoc:        { File: symmetry.c, Line: 969, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_improper_axis
    DebugLoc:        { File: symmetry.c, Line: 1134, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1365'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1171, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          ''''
  - Callee:          refine_symmetry_element
    DebugLoc:        { File: symmetry.c, Line: 553, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_improper_axis
    DebugLoc:        { File: symmetry.c, Line: 1134, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1640'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1172, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          init_improper_axis
    DebugLoc:        { File: symmetry.c, Line: 1134, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1145, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 1145, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1145, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: symmetry.c, Line: 1145, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1146, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: symmetry.c, Line: 1146, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1147, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: symmetry.c, Line: 1147, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        init_improper_axis
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1164, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'hoisting '
  - Inst:            fmul
    DebugLoc:        { File: symmetry.c, Line: 1164, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1142, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1141, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1145, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1141, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1145, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1141, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1150, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1145, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1150, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1147, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1150, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1146, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1154, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1141, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1155, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1141, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1156, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1141, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1141, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1162, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1146, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1164, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1164, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1146, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1172, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1141, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1171, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1172, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1171, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 332, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1171, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 332, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1172, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1167, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1141, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1166, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1142, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1141, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1145, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1141, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1145, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1141, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1150, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1145, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1150, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1147, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1150, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1146, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1154, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1141, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1155, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1141, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1156, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1141, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1141, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1162, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1146, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1164, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1164, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1146, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1172, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1141, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1171, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1172, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1171, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 332, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1171, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 332, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1172, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1167, Column: 0 }
Function:        init_improper_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1141, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1166, Column: 0 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1201, Column: 0 }
Function:        find_center_of_something
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          find_center_of_something
    DebugLoc:        { File: symmetry.c, Line: 1185, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1203, Column: 0 }
Function:        find_center_of_something
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          find_center_of_something
    DebugLoc:        { File: symmetry.c, Line: 1185, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1203, Column: 0 }
Function:        find_center_of_something
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          find_center_of_something
    DebugLoc:        { File: symmetry.c, Line: 1185, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1204, Column: 0 }
Function:        find_center_of_something
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_center_of_something
    DebugLoc:        { File: symmetry.c, Line: 1185, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1201, Column: 0 }
Function:        find_center_of_something
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          find_center_of_something
    DebugLoc:        { File: symmetry.c, Line: 1185, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1203, Column: 0 }
Function:        find_center_of_something
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          find_center_of_something
    DebugLoc:        { File: symmetry.c, Line: 1185, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1203, Column: 0 }
Function:        find_center_of_something
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          find_center_of_something
    DebugLoc:        { File: symmetry.c, Line: 1185, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1204, Column: 0 }
Function:        find_center_of_something
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_center_of_something
    DebugLoc:        { File: symmetry.c, Line: 1185, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1199, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_center_of_something
    DebugLoc:        { File: symmetry.c, Line: 1185, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1194, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 1194, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1194, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: symmetry.c, Line: 1194, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1192, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 1192, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 1194, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1194, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 1194, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1197, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          'hoisting '
  - Inst:            sitofp
    DebugLoc:        { File: symmetry.c, Line: 1197, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        find_center_of_something
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1208, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 1208, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1208, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: symmetry.c, Line: 1208, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 1208, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 1209, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1208, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 1208, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1209, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 1209, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1199, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1197, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1199, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1197, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1199, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1197, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1201, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1192, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1199, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: symmetry.c, Line: 1201, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1208, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1194, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1199, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 1209, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  bitcast
    DebugLoc:        { File: symmetry.c, Line: 1202, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1208, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1197, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1208, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1199, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1199, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1197, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1199, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1197, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1199, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1197, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1201, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1192, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1199, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1208, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1194, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1199, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1208, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1197, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1208, Column: 0 }
Function:        find_center_of_something
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1199, Column: 0 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1223, Column: 0 }
Function:        find_planes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1225, Column: 0 }
Function:        find_planes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1226, Column: 0 }
Function:        find_planes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1236, Column: 0 }
Function:        find_planes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1238, Column: 0 }
Function:        find_planes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1239, Column: 0 }
Function:        find_planes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1223, Column: 0 }
Function:        find_planes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1225, Column: 0 }
Function:        find_planes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1226, Column: 0 }
Function:        find_planes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1236, Column: 0 }
Function:        find_planes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1238, Column: 0 }
Function:        find_planes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1239, Column: 0 }
Function:        find_planes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1219, Column: 0 }
Function:        find_planes
Args:
  - String:          ''''
  - Callee:          init_ultimate_plane
    DebugLoc:        { File: symmetry.c, Line: 668, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1030'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1234, Column: 0 }
Function:        find_planes
Args:
  - String:          ''''
  - Callee:          init_mirror_plane
    DebugLoc:        { File: symmetry.c, Line: 626, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '660'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1232, Column: 0 }
Function:        find_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1232, Column: 0 }
Function:        find_planes
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: symmetry.c, Line: 1232, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1235, Column: 0 }
Function:        find_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1236, Column: 0 }
Function:        find_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1241, Column: 0 }
Function:        find_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1232, Column: 0 }
Function:        find_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1235, Column: 0 }
Function:        find_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1236, Column: 0 }
Function:        find_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1241, Column: 0 }
Function:        find_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1230, Column: 0 }
Function:        find_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1230, Column: 0 }
Function:        find_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1222, Column: 0 }
Function:        find_planes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1219, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1223, Column: 0 }
Function:        find_planes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1219, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1228, Column: 0 }
Function:        find_planes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1222, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1223, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1230, Column: 0 }
Function:        find_planes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1219, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1230, Column: 0 }
Function:        find_planes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1223, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1232, Column: 0 }
Function:        find_planes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1236, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1232, Column: 0 }
Function:        find_planes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1234, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1232, Column: 0 }
Function:        find_planes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1219, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1232, Column: 0 }
Function:        find_planes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1223, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1235, Column: 0 }
Function:        find_planes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1234, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1236, Column: 0 }
Function:        find_planes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1234, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1241, Column: 0 }
Function:        find_planes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1235, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1236, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1230, Column: 0 }
Function:        find_planes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1230, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1236, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1230, Column: 0 }
Function:        find_planes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1230, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1234, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1232, Column: 0 }
Function:        find_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1234, Column: 0 }
Function:        find_planes
Args:
  - String:          'hoisting '
  - Inst:            trunc
    DebugLoc:        { File: symmetry.c, Line: 1234, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1235, Column: 0 }
Function:        find_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1236, Column: 0 }
Function:        find_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1241, Column: 0 }
Function:        find_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1230, Column: 0 }
Function:        find_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1253, Column: 0 }
Function:        find_inversion_centers
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          find_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 1249, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1253, Column: 0 }
Function:        find_inversion_centers
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          find_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 1249, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1252, Column: 0 }
Function:        find_inversion_centers
Args:
  - String:          ''''
  - Callee:          init_inversion_center
    DebugLoc:        { File: symmetry.c, Line: 757, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 1249, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '440'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1266, Column: 0 }
Function:        find_infinity_axis
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_infinity_axis
    DebugLoc:        { File: symmetry.c, Line: 1261, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1268, Column: 0 }
Function:        find_infinity_axis
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_infinity_axis
    DebugLoc:        { File: symmetry.c, Line: 1261, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1269, Column: 0 }
Function:        find_infinity_axis
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_infinity_axis
    DebugLoc:        { File: symmetry.c, Line: 1261, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1266, Column: 0 }
Function:        find_infinity_axis
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_infinity_axis
    DebugLoc:        { File: symmetry.c, Line: 1261, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1268, Column: 0 }
Function:        find_infinity_axis
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_infinity_axis
    DebugLoc:        { File: symmetry.c, Line: 1261, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1269, Column: 0 }
Function:        find_infinity_axis
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_infinity_axis
    DebugLoc:        { File: symmetry.c, Line: 1261, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1264, Column: 0 }
Function:        find_infinity_axis
Args:
  - String:          ''''
  - Callee:          init_ultimate_axis
    DebugLoc:        { File: symmetry.c, Line: 826, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_infinity_axis
    DebugLoc:        { File: symmetry.c, Line: 1261, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '735'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1265, Column: 0 }
Function:        find_infinity_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1264, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1266, Column: 0 }
Function:        find_infinity_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1264, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1271, Column: 0 }
Function:        find_infinity_axis
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1265, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1266, Column: 0 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1280, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1285, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1285, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1286, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1307, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1308, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1323, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1324, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1350, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1351, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1359, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1280, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1285, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1285, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1286, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1307, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1308, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1323, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1324, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1350, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1351, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1359, Column: 0 }
Function:        find_c2_axes
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          ''''
  - Callee:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1065'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          ''''
  - Callee:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1065'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          ''''
  - Callee:          init_c2_axis
    DebugLoc:        { File: symmetry.c, Line: 884, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1065'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1320, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1326, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1320, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1326, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1334, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 1334, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1334, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: symmetry.c, Line: 1334, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 1334, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1334, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 1334, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1338, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1339, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1347, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1353, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1339, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1339, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: symmetry.c, Line: 1339, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1347, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1353, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1338, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1337, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1338, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1338, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1337, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1334, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1337, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1304, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1310, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1334, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1337, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1304, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1310, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1288, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1288, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 1288, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  load
    DebugLoc:        { File: symmetry.c, Line: 1280, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1299, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1299, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1299, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1299, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1299, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1299, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1280, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1280, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1320, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1326, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1320, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1334, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1334, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1334, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1298, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 1337, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 1338, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: symmetry.c, Line: 1338, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1339, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1339, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1339, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1339, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1335, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1335, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1347, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1353, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1347, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1338, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1338, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 1337, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: symmetry.c, Line: 1337, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1304, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1310, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1304, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1288, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1280, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1288, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1280, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1299, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1299, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1299, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1299, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1299, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1299, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1280, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1280, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1320, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1326, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1320, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1334, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1334, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1334, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1298, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1339, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1339, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1339, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1339, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1335, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1335, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1347, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1353, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1347, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1338, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1338, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1304, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1310, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1304, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1288, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1280, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1288, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1280, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1299, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1299, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1299, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1299, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1299, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1299, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1280, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1280, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1320, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1326, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1320, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1334, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1334, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1334, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1298, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1339, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1339, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1339, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1339, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1335, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1335, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1347, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1353, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1347, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1338, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1338, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1304, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1310, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1304, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1288, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1280, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1288, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1280, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'hoisting '
  - Inst:            trunc
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'hoisting '
  - Inst:            trunc
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1320, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1326, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: symmetry.c, Line: 1338, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: symmetry.c, Line: 1338, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1339, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'hoisting '
  - Inst:            trunc
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'hoisting '
  - Inst:            trunc
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1347, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1353, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1338, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'hoisting '
  - Inst:            trunc
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'hoisting '
  - Inst:            trunc
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'hoisting '
  - Inst:            trunc
    DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1334, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'hoisting '
  - Inst:            trunc
    DebugLoc:        { File: symmetry.c, Line: 1346, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          'hoisting '
  - Inst:            trunc
    DebugLoc:        { File: symmetry.c, Line: 1303, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1304, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1310, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1288, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
Function:        find_higher_axes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_higher_axes
    DebugLoc:        { File: symmetry.c, Line: 1364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1384, Column: 0 }
Function:        find_higher_axes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_higher_axes
    DebugLoc:        { File: symmetry.c, Line: 1364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1385, Column: 0 }
Function:        find_higher_axes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_higher_axes
    DebugLoc:        { File: symmetry.c, Line: 1364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
Function:        find_higher_axes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_higher_axes
    DebugLoc:        { File: symmetry.c, Line: 1364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1384, Column: 0 }
Function:        find_higher_axes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_higher_axes
    DebugLoc:        { File: symmetry.c, Line: 1364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1385, Column: 0 }
Function:        find_higher_axes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_higher_axes
    DebugLoc:        { File: symmetry.c, Line: 1364, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          ''''
  - Callee:          init_higher_axis
    DebugLoc:        { File: symmetry.c, Line: 1069, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_higher_axes
    DebugLoc:        { File: symmetry.c, Line: 1364, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '460'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1374, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1375, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1381, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1387, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1375, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1381, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1387, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1374, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1369, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1370, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1374, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1370, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1370, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: symmetry.c, Line: 1370, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1374, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1369, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1368, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1369, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1369, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1368, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 1369, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: symmetry.c, Line: 1369, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1370, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1375, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1370, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1375, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1375, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1370, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1375, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1370, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1381, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1387, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1387, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1381, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1374, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1368, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1374, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1368, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 1369, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: symmetry.c, Line: 1369, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 1368, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: symmetry.c, Line: 1368, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1370, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1375, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1370, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1375, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1375, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1370, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1375, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1370, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1381, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1387, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1387, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1381, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1374, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1368, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1374, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1368, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1370, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1375, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1370, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1375, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1375, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1370, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1375, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1370, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1381, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1387, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1387, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1381, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1374, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1368, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1374, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1368, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1375, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'hoisting '
  - Inst:            trunc
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'hoisting '
  - Inst:            trunc
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1381, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1387, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1374, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1370, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          'hoisting '
  - Inst:            trunc
    DebugLoc:        { File: symmetry.c, Line: 1380, Column: 0 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1405, Column: 0 }
Function:        find_improper_axes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1396, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1407, Column: 0 }
Function:        find_improper_axes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1396, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1408, Column: 0 }
Function:        find_improper_axes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1396, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1405, Column: 0 }
Function:        find_improper_axes
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1396, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1407, Column: 0 }
Function:        find_improper_axes
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1396, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1408, Column: 0 }
Function:        find_improper_axes
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1396, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1403, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          ''''
  - Callee:          init_improper_axis
    DebugLoc:        { File: symmetry.c, Line: 1134, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1396, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '725'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1402, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1404, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1405, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1410, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1404, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1405, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1410, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1402, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1401, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1402, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1402, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1401, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1400, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1401, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1401, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1400, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 1401, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: symmetry.c, Line: 1401, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 1402, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: symmetry.c, Line: 1402, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1404, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1410, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1403, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1405, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1405, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1403, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1410, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1404, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1405, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1402, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1400, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1405, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1402, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1400, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1403, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 1401, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: symmetry.c, Line: 1401, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 1400, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: symmetry.c, Line: 1400, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1404, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1410, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1403, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1405, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1405, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1403, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1410, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1404, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1405, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1402, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1400, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1405, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1402, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1400, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1403, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1404, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1410, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1403, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1405, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1405, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1403, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1410, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1404, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1405, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1402, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1400, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1405, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1402, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1400, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1403, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1404, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1405, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1410, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1402, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1423, Column: 0 }
Function:        report_planes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_planes
    DebugLoc:        { File: symmetry.c, Line: 1419, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1426, Column: 0 }
Function:        report_planes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_planes
    DebugLoc:        { File: symmetry.c, Line: 1419, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1428, Column: 0 }
Function:        report_planes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_planes
    DebugLoc:        { File: symmetry.c, Line: 1419, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1423, Column: 0 }
Function:        report_planes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_planes
    DebugLoc:        { File: symmetry.c, Line: 1419, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1426, Column: 0 }
Function:        report_planes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_planes
    DebugLoc:        { File: symmetry.c, Line: 1419, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1428, Column: 0 }
Function:        report_planes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_planes
    DebugLoc:        { File: symmetry.c, Line: 1419, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1427, Column: 0 }
Function:        report_planes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_planes
    DebugLoc:        { File: symmetry.c, Line: 1419, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1430, Column: 0 }
Function:        report_planes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_planes
    DebugLoc:        { File: symmetry.c, Line: 1419, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1431, Column: 0 }
Function:        report_planes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_planes
    DebugLoc:        { File: symmetry.c, Line: 1419, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1432, Column: 0 }
Function:        report_planes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_planes
    DebugLoc:        { File: symmetry.c, Line: 1419, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1429, Column: 0 }
Function:        report_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1430, Column: 0 }
Function:        report_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1431, Column: 0 }
Function:        report_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1432, Column: 0 }
Function:        report_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1430, Column: 0 }
Function:        report_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1431, Column: 0 }
Function:        report_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1432, Column: 0 }
Function:        report_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1429, Column: 0 }
Function:        report_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1429, Column: 0 }
Function:        report_planes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1422, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1428, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1430, Column: 0 }
Function:        report_planes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1432, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1432, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1430, Column: 0 }
Function:        report_planes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1432, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1428, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1431, Column: 0 }
Function:        report_planes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1430, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1430, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1431, Column: 0 }
Function:        report_planes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1430, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1431, Column: 0 }
Function:        report_planes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1430, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1431, Column: 0 }
Function:        report_planes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1430, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1431, Column: 0 }
Function:        report_planes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1430, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1432, Column: 0 }
Function:        report_planes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1431, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1431, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1432, Column: 0 }
Function:        report_planes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1431, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1432, Column: 0 }
Function:        report_planes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1431, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1429, Column: 0 }
Function:        report_planes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1429, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1432, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1430, Column: 0 }
Function:        report_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1431, Column: 0 }
Function:        report_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1432, Column: 0 }
Function:        report_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1429, Column: 0 }
Function:        report_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1441, Column: 0 }
Function:        report_inversion_centers
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 1439, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1443, Column: 0 }
Function:        report_inversion_centers
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 1439, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1444, Column: 0 }
Function:        report_inversion_centers
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 1439, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1441, Column: 0 }
Function:        report_inversion_centers
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 1439, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1443, Column: 0 }
Function:        report_inversion_centers
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 1439, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1444, Column: 0 }
Function:        report_inversion_centers
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 1439, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1445, Column: 0 }
Function:        report_inversion_centers
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 1439, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1446, Column: 0 }
Function:        report_inversion_centers
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 1439, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1445, Column: 0 }
Function:        report_inversion_centers
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1444, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1445, Column: 0 }
Function:        report_inversion_centers
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1444, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1445, Column: 0 }
Function:        report_inversion_centers
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1444, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1445, Column: 0 }
Function:        report_inversion_centers
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1444, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1446, Column: 0 }
Function:        report_inversion_centers
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1445, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1445, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1446, Column: 0 }
Function:        report_inversion_centers
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1445, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1446, Column: 0 }
Function:        report_inversion_centers
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1445, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1446, Column: 0 }
Function:        report_inversion_centers
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1445, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1446, Column: 0 }
Function:        report_inversion_centers
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1445, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1446, Column: 0 }
Function:        report_inversion_centers
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1445, Column: 0 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1459, Column: 0 }
Function:        report_axes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1462, Column: 0 }
Function:        report_axes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1464, Column: 0 }
Function:        report_axes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1459, Column: 0 }
Function:        report_axes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1462, Column: 0 }
Function:        report_axes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1464, Column: 0 }
Function:        report_axes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1463, Column: 0 }
Function:        report_axes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1466, Column: 0 }
Function:        report_axes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1468, Column: 0 }
Function:        report_axes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1469, Column: 0 }
Function:        report_axes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1470, Column: 0 }
Function:        report_axes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1472, Column: 0 }
Function:        report_axes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1465, Column: 0 }
Function:        report_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1466, Column: 0 }
Function:        report_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1467, Column: 0 }
Function:        report_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1470, Column: 0 }
Function:        report_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1472, Column: 0 }
Function:        report_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1466, Column: 0 }
Function:        report_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1467, Column: 0 }
Function:        report_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1470, Column: 0 }
Function:        report_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1472, Column: 0 }
Function:        report_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1465, Column: 0 }
Function:        report_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1465, Column: 0 }
Function:        report_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1458, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1464, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1466, Column: 0 }
Function:        report_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1472, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1472, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1466, Column: 0 }
Function:        report_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1472, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1464, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1467, Column: 0 }
Function:        report_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1466, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1466, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1467, Column: 0 }
Function:        report_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1466, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1467, Column: 0 }
Function:        report_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1466, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1470, Column: 0 }
Function:        report_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1467, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1468, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1470, Column: 0 }
Function:        report_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1467, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1469, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1472, Column: 0 }
Function:        report_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1470, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1470, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1472, Column: 0 }
Function:        report_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1470, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1472, Column: 0 }
Function:        report_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1470, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1472, Column: 0 }
Function:        report_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1470, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1472, Column: 0 }
Function:        report_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1470, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1472, Column: 0 }
Function:        report_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1470, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1465, Column: 0 }
Function:        report_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1465, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1472, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1466, Column: 0 }
Function:        report_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1467, Column: 0 }
Function:        report_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1470, Column: 0 }
Function:        report_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1472, Column: 0 }
Function:        report_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1465, Column: 0 }
Function:        report_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1486, Column: 0 }
Function:        report_improper_axes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1489, Column: 0 }
Function:        report_improper_axes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1491, Column: 0 }
Function:        report_improper_axes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1486, Column: 0 }
Function:        report_improper_axes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1489, Column: 0 }
Function:        report_improper_axes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1491, Column: 0 }
Function:        report_improper_axes
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1490, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1493, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1495, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1496, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1497, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1499, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1492, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1493, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1494, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1497, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1499, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1493, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1494, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1497, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1499, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1492, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1492, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1485, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1491, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1493, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1499, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1499, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1493, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1499, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1491, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1494, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1493, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1493, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1494, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1493, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1494, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1493, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1497, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1494, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1495, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1497, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1494, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1496, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1499, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1497, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1497, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1499, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1497, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1499, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1497, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1499, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1497, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1499, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1497, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1499, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1497, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1492, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1492, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1499, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1493, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1494, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1497, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1499, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1492, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        report_and_reset_counters
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_and_reset_counters
    DebugLoc:        { File: symmetry.c, Line: 1512, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1529, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1253, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1534, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1539, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1266, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1268, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1269, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1544, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1549, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1554, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1529, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1253, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1534, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1539, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1266, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          realloc
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1268, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          perror
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1269, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1544, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1549, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1554, Column: 0 }
Function:        find_symmetry_elements
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1527, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          find_center_of_something
    DebugLoc:        { File: symmetry.c, Line: 1185, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '465'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1252, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          init_inversion_center
    DebugLoc:        { File: symmetry.c, Line: 757, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '440'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1536, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          find_planes
    DebugLoc:        { File: symmetry.c, Line: 1215, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '500'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1264, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          init_ultimate_axis
    DebugLoc:        { File: symmetry.c, Line: 826, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '735'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1546, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          find_c2_axes
    DebugLoc:        { File: symmetry.c, Line: 1277, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1430'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1551, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          find_higher_axes
    DebugLoc:        { File: symmetry.c, Line: 1364, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '475'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1556, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          find_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1396, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '285'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1528, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1527, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1532, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1528, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1252, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1252, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1252, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1252, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1252, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1252, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1252, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1252, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1537, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1532, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1536, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1521, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1536, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1521, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1536, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1521, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1536, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1521, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1536, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1521, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1536, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1521, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1536, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1521, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1536, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1265, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1264, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1266, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1264, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1271, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 1265, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1266, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1542, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1537, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1266, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1542, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1537, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1264, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1266, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1264, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1266, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1264, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1266, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1264, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1266, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1264, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1266, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1264, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1266, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1264, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1266, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1264, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1547, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1546, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1546, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1546, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1546, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1546, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1546, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1546, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1546, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1552, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1547, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1551, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1551, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1551, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1551, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1551, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1551, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1551, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1551, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1557, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1552, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1513, Column: 0 }
Function:        find_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1556, Column: 0 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
Function:        sort_symmetry_elements
Args:
  - Callee:          qsort
  - String:          ' will not be inlined into '
  - Caller:          sort_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1579, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
Function:        sort_symmetry_elements
Args:
  - Callee:          qsort
  - String:          ' will not be inlined into '
  - Caller:          sort_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1579, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
Function:        sort_symmetry_elements
Args:
  - Callee:          qsort
  - String:          ' will not be inlined into '
  - Caller:          sort_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1579, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
Function:        sort_symmetry_elements
Args:
  - Callee:          qsort
  - String:          ' will not be inlined into '
  - Caller:          sort_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1579, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
Function:        sort_symmetry_elements
Args:
  - Callee:          qsort
  - String:          ' will not be inlined into '
  - Caller:          sort_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1579, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
Function:        sort_symmetry_elements
Args:
  - Callee:          qsort
  - String:          ' will not be inlined into '
  - Caller:          sort_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1579, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1583, Column: 0 }
Function:        sort_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
Function:        sort_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1586, Column: 0 }
Function:        sort_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1586, Column: 0 }
Function:        sort_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
Function:        sort_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
Function:        sort_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1594, Column: 0 }
Function:        report_symmetry_elements_verbose
Args:
  - String:          ''''
  - Callee:          report_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 1439, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_symmetry_elements_verbose
    DebugLoc:        { File: symmetry.c, Line: 1593, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '250'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1595, Column: 0 }
Function:        report_symmetry_elements_verbose
Args:
  - String:          ''''
  - Callee:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_symmetry_elements_verbose
    DebugLoc:        { File: symmetry.c, Line: 1593, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '520'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1596, Column: 0 }
Function:        report_symmetry_elements_verbose
Args:
  - String:          ''''
  - Callee:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_symmetry_elements_verbose
    DebugLoc:        { File: symmetry.c, Line: 1593, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '520'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1597, Column: 0 }
Function:        report_symmetry_elements_verbose
Args:
  - String:          ''''
  - Callee:          report_planes
    DebugLoc:        { File: symmetry.c, Line: 1419, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_symmetry_elements_verbose
    DebugLoc:        { File: symmetry.c, Line: 1593, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '380'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1605, Column: 0 }
Function:        summarize_symmetry_elements
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          summarize_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1602, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1606, Column: 0 }
Function:        summarize_symmetry_elements
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          summarize_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1602, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1605, Column: 0 }
Function:        summarize_symmetry_elements
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          summarize_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1602, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1606, Column: 0 }
Function:        summarize_symmetry_elements
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          summarize_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1602, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
Function:        summarize_symmetry_elements
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
Function:        summarize_symmetry_elements
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
Function:        summarize_symmetry_elements
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
Function:        summarize_symmetry_elements
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
Function:        summarize_symmetry_elements
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
Function:        summarize_symmetry_elements
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
Function:        summarize_symmetry_elements
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
Function:        summarize_symmetry_elements
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
Function:        summarize_symmetry_elements
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
Function:        summarize_symmetry_elements
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
Function:        summarize_symmetry_elements
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
Function:        summarize_symmetry_elements
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
Function:        summarize_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  bitcast
    DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
Function:        summarize_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  load
    DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
Function:        summarize_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  bitcast
    DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
Function:        summarize_symmetry_elements
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
Function:        summarize_symmetry_elements
Args:
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
Function:        summarize_symmetry_elements
Args:
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1617, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1622, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1622, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1623, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1628, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1633, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strlen
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1635, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strlen
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1638, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strcat
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strcat
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strcat
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strcat
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strcat
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1648, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strlen
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1649, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strcat
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1651, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1617, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1622, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1622, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1623, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          exit
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1628, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1633, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strlen
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1635, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strlen
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1638, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strcat
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strcat
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strcat
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strcat
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strcat
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1648, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strlen
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1649, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          strcat
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1651, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1632, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1637, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          ''''
  - Callee:          sprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1771, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          ''''
  - Callee:          sprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1771, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          ''''
  - Callee:          sprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1771, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          ''''
  - Callee:          sprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1771, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          ''''
  - Callee:          sprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1771, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1649, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          ''''
  - Callee:          sprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1771, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1633, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1617, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1632, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: symmetry.c, Line: 1633, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1634, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1632, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1636, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1634, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1635, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1640, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1632, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1640, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1637, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1634, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1634, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1637, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1644, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1640, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1644, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1640, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: symmetry.c, Line: 1644, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1632, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1637, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1648, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1617, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1632, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1648, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1617, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1637, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1648, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1617, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1648, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1617, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1648, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1617, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1648, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1617, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1650, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1631, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1632, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1650, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1631, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1637, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1650, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1631, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1650, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1631, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1650, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1631, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1650, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1631, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1650, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1631, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1649, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1633, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1617, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1632, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1634, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1632, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1636, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1634, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1635, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1640, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1632, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1640, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1637, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1634, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1637, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1644, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1640, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1644, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1640, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1632, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1637, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1648, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1617, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1648, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1617, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1648, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1617, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1648, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1617, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1632, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1648, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1617, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1637, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1648, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1617, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1650, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1631, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1632, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1650, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1631, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1637, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1650, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1631, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1650, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1631, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1650, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1631, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1650, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1631, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1650, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1631, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1649, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1633, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1617, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1632, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1634, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1632, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1636, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1634, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 1635, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1640, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1632, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1640, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1637, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1634, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1637, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1644, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1640, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1644, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1640, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1632, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1637, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1648, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1617, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1648, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1617, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1648, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1617, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1648, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1617, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1632, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1648, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1617, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1637, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1648, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1617, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1650, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1631, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1632, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1650, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1631, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1637, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1650, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1631, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1650, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1631, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1650, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1631, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1650, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1631, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1650, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1631, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1649, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1664, Column: 0 }
Function:        identify_point_group
Args:
  - Callee:          strcmp
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group
    DebugLoc:        { File: symmetry.c, Line: 1658, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1678, Column: 0 }
Function:        identify_point_group
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group
    DebugLoc:        { File: symmetry.c, Line: 1658, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1681, Column: 0 }
Function:        identify_point_group
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group
    DebugLoc:        { File: symmetry.c, Line: 1658, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1683, Column: 0 }
Function:        identify_point_group
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group
    DebugLoc:        { File: symmetry.c, Line: 1658, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1685, Column: 0 }
Function:        identify_point_group
Args:
  - Callee:          strcmp
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group
    DebugLoc:        { File: symmetry.c, Line: 1658, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1664, Column: 0 }
Function:        identify_point_group
Args:
  - Callee:          strcmp
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group
    DebugLoc:        { File: symmetry.c, Line: 1658, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1678, Column: 0 }
Function:        identify_point_group
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group
    DebugLoc:        { File: symmetry.c, Line: 1658, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1681, Column: 0 }
Function:        identify_point_group
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group
    DebugLoc:        { File: symmetry.c, Line: 1658, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1683, Column: 0 }
Function:        identify_point_group
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group
    DebugLoc:        { File: symmetry.c, Line: 1658, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1685, Column: 0 }
Function:        identify_point_group
Args:
  - Callee:          strcmp
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group
    DebugLoc:        { File: symmetry.c, Line: 1658, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1671, Column: 0 }
Function:        identify_point_group
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          identify_point_group
    DebugLoc:        { File: symmetry.c, Line: 1658, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1686, Column: 0 }
Function:        identify_point_group
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          identify_point_group
    DebugLoc:        { File: symmetry.c, Line: 1658, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1691, Column: 0 }
Function:        identify_point_group
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          identify_point_group
    DebugLoc:        { File: symmetry.c, Line: 1658, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1664, Column: 0 }
Function:        identify_point_group
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1670, Column: 0 }
Function:        identify_point_group
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1671, Column: 0 }
Function:        identify_point_group
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1664, Column: 0 }
Function:        identify_point_group
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1670, Column: 0 }
Function:        identify_point_group
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1671, Column: 0 }
Function:        identify_point_group
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1685, Column: 0 }
Function:        identify_point_group
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1685, Column: 0 }
Function:        identify_point_group
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1664, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1665, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1664, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1671, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1670, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1665, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1671, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1665, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1671, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1665, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1685, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1683, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1685, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1664, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1686, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1685, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1664, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1685, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1685, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1664, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1683, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1685, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1683, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1686, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1685, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1691, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1686, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1691, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1685, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1691, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1683, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1664, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1665, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1664, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1671, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1670, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1665, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1671, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1665, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1671, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1665, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1685, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1683, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1685, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1664, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1686, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1685, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1664, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1685, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1685, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1664, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1683, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1685, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1683, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1686, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1685, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1691, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1686, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1691, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1685, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1691, Column: 0 }
Function:        identify_point_group
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1683, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1664, Column: 0 }
Function:        identify_point_group
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1670, Column: 0 }
Function:        identify_point_group
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1671, Column: 0 }
Function:        identify_point_group
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1685, Column: 0 }
Function:        identify_point_group
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1703, Column: 0 }
Function:        identify_point_group1
Args:
  - Callee:          strcmp
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1718, Column: 0 }
Function:        identify_point_group1
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1722, Column: 0 }
Function:        identify_point_group1
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1725, Column: 0 }
Function:        identify_point_group1
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - Callee:          strcmp
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1737, Column: 0 }
Function:        identify_point_group1
Args:
  - Callee:          strcpy
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1703, Column: 0 }
Function:        identify_point_group1
Args:
  - Callee:          strcmp
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1718, Column: 0 }
Function:        identify_point_group1
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1722, Column: 0 }
Function:        identify_point_group1
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1725, Column: 0 }
Function:        identify_point_group1
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - Callee:          strcmp
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1737, Column: 0 }
Function:        identify_point_group1
Args:
  - Callee:          strcpy
  - String:          ' will not be inlined into '
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1710, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1729, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1735, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1703, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1709, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1710, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1703, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1709, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1710, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        identify_point_group1
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        identify_point_group1
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1703, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1704, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1703, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1710, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1709, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1704, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1710, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1704, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1710, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1704, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1709, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1704, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1709, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1710, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1724, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1722, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1722, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1725, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1704, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1710, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1703, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1729, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1703, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1703, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1722, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1703, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1725, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1703, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1704, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1703, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1710, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1722, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1725, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1704, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1710, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1729, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1729, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1725, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
Function:        identify_point_group1
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1735, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1729, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1735, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1735, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1722, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1735, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1725, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1737, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1718, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1737, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1735, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1737, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1729, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1737, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1737, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1722, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1737, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1725, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1703, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1704, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1703, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1710, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1709, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1704, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1710, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1704, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1710, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1704, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1709, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1704, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1709, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1710, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1724, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1722, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1722, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1725, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1704, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1710, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1703, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1729, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1703, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1703, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1722, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1703, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1725, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1703, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1704, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1703, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1710, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1722, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1725, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1704, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1710, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1729, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1729, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1725, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1735, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1729, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1735, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1735, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1722, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1735, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1725, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1737, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1718, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1737, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1735, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1737, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1729, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1737, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1737, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1722, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1737, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1725, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1703, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1709, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1710, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        identify_point_group1
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1753, Column: 0 }
Function:        read_coordinates
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1753, Column: 0 }
Function:        read_coordinates
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1757, Column: 0 }
Function:        read_coordinates
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1759, Column: 0 }
Function:        read_coordinates
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1759, Column: 0 }
Function:        read_coordinates
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1764, Column: 0 }
Function:        read_coordinates
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1753, Column: 0 }
Function:        read_coordinates
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1753, Column: 0 }
Function:        read_coordinates
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1757, Column: 0 }
Function:        read_coordinates
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1759, Column: 0 }
Function:        read_coordinates
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1759, Column: 0 }
Function:        read_coordinates
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1764, Column: 0 }
Function:        read_coordinates
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1752, Column: 0 }
Function:        read_coordinates
Args:
  - String:          ''''
  - Callee:          fscanf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1206, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1756, Column: 0 }
Function:        read_coordinates
Args:
  - String:          ''''
  - Callee:          printf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 956, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1763, Column: 0 }
Function:        read_coordinates
Args:
  - String:          ''''
  - Callee:          fscanf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 1206, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: symmetry.c, Line: 1764, Column: 0 }
Function:        read_coordinates
Args:
  - String:          ''''
  - Callee:          fprintf
    DebugLoc:        { File: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h', 
                       Line: 837, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          read_coordinates
    DebugLoc:        { File: symmetry.c, Line: 1749, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          varargs
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1762, Column: 0 }
Function:        read_coordinates
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1763, Column: 0 }
Function:        read_coordinates
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1763, Column: 0 }
Function:        read_coordinates
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1762, Column: 0 }
Function:        read_coordinates
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1756, Column: 0 }
Function:        read_coordinates
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1752, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1756, Column: 0 }
Function:        read_coordinates
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1752, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1757, Column: 0 }
Function:        read_coordinates
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1756, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1752, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1757, Column: 0 }
Function:        read_coordinates
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1756, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1756, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 1762, Column: 0 }
Function:        read_coordinates
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  load
    DebugLoc:        { File: symmetry.c, Line: 1757, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1763, Column: 0 }
Function:        read_coordinates
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1763, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1762, Column: 0 }
Function:        read_coordinates
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1757, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1763, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1756, Column: 0 }
Function:        read_coordinates
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1752, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1756, Column: 0 }
Function:        read_coordinates
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1752, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1757, Column: 0 }
Function:        read_coordinates
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1756, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1752, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1757, Column: 0 }
Function:        read_coordinates
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1756, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1756, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1763, Column: 0 }
Function:        read_coordinates
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1763, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1762, Column: 0 }
Function:        read_coordinates
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1757, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1763, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1763, Column: 0 }
Function:        read_coordinates
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1762, Column: 0 }
Function:        read_coordinates
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 4544, Column: 0 }
Function:        point_group_calc
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 4546, Column: 0 }
Function:        point_group_calc
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 4546, Column: 0 }
Function:        point_group_calc
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
Function:        point_group_calc
Args:
  - Callee:          qsort
  - String:          ' will not be inlined into '
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
Function:        point_group_calc
Args:
  - Callee:          qsort
  - String:          ' will not be inlined into '
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
Function:        point_group_calc
Args:
  - Callee:          qsort
  - String:          ' will not be inlined into '
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1605, Column: 0 }
Function:        point_group_calc
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1606, Column: 0 }
Function:        point_group_calc
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
Function:        point_group_calc
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 4544, Column: 0 }
Function:        point_group_calc
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 4546, Column: 0 }
Function:        point_group_calc
Args:
  - Callee:          __acrt_iob_func
  - String:          ' will not be inlined into '
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 4546, Column: 0 }
Function:        point_group_calc
Args:
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
Function:        point_group_calc
Args:
  - Callee:          qsort
  - String:          ' will not be inlined into '
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
Function:        point_group_calc
Args:
  - Callee:          qsort
  - String:          ' will not be inlined into '
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
Function:        point_group_calc
Args:
  - Callee:          qsort
  - String:          ' will not be inlined into '
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1605, Column: 0 }
Function:        point_group_calc
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 1606, Column: 0 }
Function:        point_group_calc
Args:
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
Function:        point_group_calc
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          find_symmetry_elements
    DebugLoc:        { File: symmetry.c, Line: 1526, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1585'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 4004, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          rotate_atom
    DebugLoc:        { File: symmetry.c, Line: 794, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '355'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 4025, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          rotate_atom
    DebugLoc:        { File: symmetry.c, Line: 794, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '355'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 4054, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          rotate_reflect_atom
    DebugLoc:        { File: symmetry.c, Line: 1102, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '345'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 4075, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          rotate_reflect_atom
    DebugLoc:        { File: symmetry.c, Line: 1102, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '345'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1594, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          report_inversion_centers
    DebugLoc:        { File: symmetry.c, Line: 1439, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '250'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1595, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          report_axes
    DebugLoc:        { File: symmetry.c, Line: 1455, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '520'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1596, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          report_improper_axes
    DebugLoc:        { File: symmetry.c, Line: 1482, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '520'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 1597, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          report_planes
    DebugLoc:        { File: symmetry.c, Line: 1419, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '380'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 4570, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          report_symmetry_elements_brief
    DebugLoc:        { File: symmetry.c, Line: 1615, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '1245'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: symmetry.c, Line: 4571, Column: 0 }
Function:        point_group_calc
Args:
  - String:          ''''
  - Callee:          identify_point_group1
    DebugLoc:        { File: symmetry.c, Line: 1697, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          point_group_calc
    DebugLoc:        { File: symmetry.c, Line: 4536, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '615'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4550, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4550, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4550, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 620, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            fmul
    DebugLoc:        { File: symmetry.c, Line: 620, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 3966, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 3966, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 3966, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 3966, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 3966, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3953, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 3955, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3966, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3971, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 3971, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 3955, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 3955, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 615, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 615, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 615, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 618, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 618, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3966, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3971, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3953, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            PromoteLoopAccessesToScalar
DebugLoc:        { File: symmetry.c, Line: 618, Column: 0 }
Function:        point_group_calc
Args:
  - String:          Moving accesses to memory location out of the loop
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 3971, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 3971, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3953, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 3955, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3953, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 3955, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 3955, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 618, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 618, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            PromoteLoopAccessesToScalar
DebugLoc:        { File: symmetry.c, Line: 618, Column: 0 }
Function:        point_group_calc
Args:
  - String:          Moving accesses to memory location out of the loop
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4016, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4016, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4011, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4011, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4016, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4016, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4016, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4017, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 4017, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4017, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4017, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4011, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4016, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4021, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4011, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 0, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: symmetry.c, Line: 0, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4016, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4017, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 4017, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4017, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4017, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4021, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4001, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4003, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4003, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4003, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4009, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: symmetry.c, Line: 4009, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4017, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 4017, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4017, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4001, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4001, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4003, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4001, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4003, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4003, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4017, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 4017, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 751, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 751, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 751, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 751, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 751, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            fmul
    DebugLoc:        { File: symmetry.c, Line: 751, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4114, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4114, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4114, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4114, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4114, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4101, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4103, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4114, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4119, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4119, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4103, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4103, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 749, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 749, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 751, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 751, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 751, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4114, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4119, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4101, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            PromoteLoopAccessesToScalar
DebugLoc:        { File: symmetry.c, Line: 749, Column: 0 }
Function:        point_group_calc
Args:
  - String:          Moving accesses to memory location out of the loop
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4119, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4119, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4098, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4098, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4101, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4103, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4098, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4098, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4098, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4101, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4103, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4103, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 749, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 749, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            PromoteLoopAccessesToScalar
DebugLoc:        { File: symmetry.c, Line: 749, Column: 0 }
Function:        point_group_calc
Args:
  - String:          Moving accesses to memory location out of the loop
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4066, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4066, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4061, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4061, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4066, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4066, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4066, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4067, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 4067, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4067, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4067, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4059, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 4059, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4059, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4059, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4061, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4066, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4071, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4061, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 0, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: symmetry.c, Line: 0, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4066, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4067, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 4067, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4067, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4067, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4071, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4051, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4053, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4053, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4053, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4059, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 4059, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4059, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4067, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 4067, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4067, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4051, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4051, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4053, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4051, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4053, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4053, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4067, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: symmetry.c, Line: 4067, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 4550, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  bitcast
    DebugLoc:        { File: symmetry.c, Line: 4545, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4550, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1580, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1583, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1583, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1586, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1586, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1586, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1605, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1605, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1605, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1605, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1583, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1583, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  bitcast
    DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  load
    DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1586, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  bitcast
    DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4559, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4559, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4559, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4559, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1580, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1580, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1580, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1580, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  ''
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 3953, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: symmetry.c, Line: 3953, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3966, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  load
    DebugLoc:        { File: symmetry.c, Line: 3955, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 3971, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3953, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: symmetry.c, Line: 3953, Column: 0 }
Function:        point_group_calc
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 4001, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: symmetry.c, Line: 4001, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4017, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4004, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4011, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: symmetry.c, Line: 4011, Column: 0 }
Function:        point_group_calc
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4016, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 4021, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4011, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4011, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 4001, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: symmetry.c, Line: 4001, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4098, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4098, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4098, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4098, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4098, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  ''
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 4098, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: symmetry.c, Line: 4098, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 4101, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: symmetry.c, Line: 4101, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4114, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  load
    DebugLoc:        { File: symmetry.c, Line: 4103, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 4119, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4101, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: symmetry.c, Line: 4101, Column: 0 }
Function:        point_group_calc
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 4051, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: symmetry.c, Line: 4051, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4067, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4054, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4061, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: symmetry.c, Line: 4061, Column: 0 }
Function:        point_group_calc
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4066, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 4071, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4061, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4061, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 4051, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: symmetry.c, Line: 4051, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4550, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1580, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1583, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1583, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1586, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1586, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1586, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1605, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1605, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1605, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1605, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1583, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1583, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1586, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4559, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4559, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4559, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4559, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1580, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1580, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1580, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1580, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3966, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3953, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4017, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4004, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 4011, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4016, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4011, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4098, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4098, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4098, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4098, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4098, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4114, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4101, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4067, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4054, Column: 0 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: symmetry.c, Line: 4061, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4066, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4061, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4550, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1580, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1583, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1583, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1586, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1586, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1586, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1605, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1605, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1605, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1605, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1583, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1583, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1586, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4559, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4559, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4559, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4559, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1580, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1580, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1580, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1580, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3966, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3953, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3950, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3995, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1608, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4017, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4004, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4016, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4011, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4098, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4098, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4098, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4098, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4098, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4114, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4101, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4048, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 1610, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4542, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4067, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4054, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4066, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4061, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: symmetry.c, Line: 4540, Column: 0 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1584, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1581, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 1587, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4556, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: symmetry.c, Line: 4560, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4118, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3970, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: symmetry.c, Line: 4568, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: symmetry.c, Line: 1607, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
Function:        point_group_calc
Args:
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: symmetry.c, Line: 1609, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 615, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3966, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3953, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4016, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4011, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4017, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 751, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4114, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4101, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4066, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4061, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4059, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4067, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 224, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 217, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: symmetry.c, Line: 217, Column: 0 }
Function:        establish_pairs
Args:
  - String:          'sinking '
  - Inst:            trunc
    DebugLoc:        { File: symmetry.c, Line: 217, Column: 0 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 210, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 211, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 212, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 213, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 216, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 217, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 218, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 230, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 236, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 238, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 209, Column: 0 }
Function:        establish_pairs
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 254, Column: 0 }
Function:        check_transform_order
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 259, Column: 0 }
Function:        check_transform_order
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 346, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 349, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 352, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 345, Column: 0 }
Function:        check_transform_quality
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 402, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 403, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 405, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 401, Column: 0 }
Function:        eval_optimization_target_function
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 472, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 475, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 478, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 469, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 508, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 453, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 454, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 459, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 462, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 421, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 469, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 489, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 509, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 509, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 514, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 519, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 523, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 427, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 541, Column: 0 }
Function:        optimize_transformation_params
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 288, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 291, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 346, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 347, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 349, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 352, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 345, Column: 0 }
Function:        refine_symmetry_element
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 732, Column: 0 }
Function:        init_ultimate_plane
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 871, Column: 0 }
Function:        init_ultimate_axis
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1232, Column: 0 }
Function:        find_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1235, Column: 0 }
Function:        find_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1236, Column: 0 }
Function:        find_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1241, Column: 0 }
Function:        find_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1230, Column: 0 }
Function:        find_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1319, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1320, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1321, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1326, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1339, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 1341, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1347, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1348, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1353, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1338, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1290, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1292, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1318, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1334, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1304, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1305, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1310, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1288, Column: 0 }
Function:        find_c2_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1375, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1377, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1381, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1382, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1387, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1374, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1370, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1372, Column: 0 }
Function:        find_higher_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1404, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1405, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1410, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1402, Column: 0 }
Function:        find_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1430, Column: 0 }
Function:        report_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1431, Column: 0 }
Function:        report_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1432, Column: 0 }
Function:        report_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1429, Column: 0 }
Function:        report_planes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1466, Column: 0 }
Function:        report_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1467, Column: 0 }
Function:        report_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1470, Column: 0 }
Function:        report_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1472, Column: 0 }
Function:        report_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1465, Column: 0 }
Function:        report_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1493, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1494, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1497, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1499, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1492, Column: 0 }
Function:        report_improper_axes
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1642, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1641, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1646, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1645, Column: 0 }
Function:        report_symmetry_elements_brief
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1664, Column: 0 }
Function:        identify_point_group
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1670, Column: 0 }
Function:        identify_point_group
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1671, Column: 0 }
Function:        identify_point_group
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1685, Column: 0 }
Function:        identify_point_group
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1703, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1709, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1710, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1727, Column: 0 }
Function:        identify_point_group1
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        identify_point_group1
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1763, Column: 0 }
Function:        read_coordinates
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 1762, Column: 0 }
Function:        read_coordinates
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3951, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 615, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3966, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3953, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3959, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3948, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3978, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3999, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4016, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4020, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4011, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4017, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4007, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 3993, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4031, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4099, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 751, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4114, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4101, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4107, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4096, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4126, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4049, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4066, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4070, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4061, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: symmetry.c, Line: 4059, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4067, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4057, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4046, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: symmetry.c, Line: 4081, Column: 0 }
Function:        point_group_calc
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
